## 가입
https://hub.docker.com/

## 도커
hub.docker.com -> gorapadd@naver.com / keb213185###
docker login -> gorapadd / keb213185###   <= 이메일아님.

==> 조회 : nginx  
1. Tags :  일종의 버전관리

==> 조회 : mysql


1. 이미지관리 : docker 싸이트
root@labs--311032102:/home/project/monolith2misvc# docker pull nginx
=> 이미지 생성됨

2. 실행되는 순간
=> docker run 하는순간 우리가 관리함.
docker run --name my-nginx -d -p nginx

docker ps -a

docker rm d1e88aaa32ae

un 'docker COMMAND --help' for more information on a command.
root@labs--311032102:/home/project/monolith2misvc# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
42c077c10790: Pull complete 
62c70f376f6a: Pull complete 
915cc9bd79c2: Pull complete 
75a963e94de0: Pull complete 
7b1fab684d70: Pull complete 
db24d06d5af4: Pull complete 
Digest: sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514
Status: Downloaded newer image for nginx:latest
root@labs--311032102:/home/project/monolith2misvc# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker run --name my-nginx -d nginx
d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b
root@labs--311032102:/home/project/monolith2misvc# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
d1e88aaa32ae        nginx               "/docker-entrypoin..."   50 seconds ago      Up 49 seconds       80/tcp              my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker rm docker ps -a
unknown shorthand flag: 'a' in -a
See 'docker rm --help'.
root@labs--311032102:/home/project/monolith2misvc# docker rm d1e88aaa32ae
Error response from daemon: You cannot remove a running container d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b. Stop the container before attempting removal or force remove
root@labs--311032102:/home/project/monolith2misvc# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
d1e88aaa32ae        nginx               "/docker-entrypoin..."   About a minute ago   Up About a minute   80/tcp              my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker rm d1e88aaa32ae
Error response from daemon: You cannot remove a running container d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b. Stop the container before attempting removal or force remove
root@labs--311032102:/home/project/monolith2misvc# docker ps -a
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS               NAMES
d1e88aaa32ae        nginx               "/docker-entrypoin..."   About a minute ago   Up About a minute   80/tcp              my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker run --name my-nginx -d nginx
docker: Error response from daemon: Conflict. The container name "/my-nginx" is already in use by container "d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b". You have to remove (or rename) that container to be able to reuse that name..
See 'docker run --help'.
root@labs--311032102:/home/project/monolith2misvc# docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
ad02c8169ab4        bridge              bridge              local
d6a9fbb1b31f        host                host                local
a0bceb52ab69        none                null                local
root@labs--311032102:/home/project/monolith2misvc# ifconfig -a
root@labs--311032102:/home/project/monolith2misvc# docker inspect
"docker inspect" requires at least 1 argument(s).
See 'docker inspect --help'.

Usage:  docker inspect [OPTIONS] NAME|ID [NAME|ID...]

Return low-level information on Docker objects
root@labs--311032102:/home/project/monolith2misvc# docker inspect my-nginx
[
    {
        "Id": "d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b",
        "Created": "2022-06-20T01:14:38.711516537Z",
        "Path": "/docker-entrypoint.sh",
        "Args": [
            "nginx",
            "-g",
            "daemon off;"
        ],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 1439,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2022-06-20T01:14:39.151446144Z",
            "FinishedAt": "0001-01-01T00:00:00Z"
        },
        "Image": "sha256:0e901e68141fd02f237cf63eb842529f8a9500636a9419e3cf4fb986b8fe3d5d",
        "ResolvConfPath": "/var/lib/docker/containers/d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b/resolv.conf",
        "HostnamePath": "/var/lib/docker/containers/d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b/hostname",
        "HostsPath": "/var/lib/docker/containers/d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b/hosts",
        "LogPath": "/var/lib/docker/containers/d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b/d1e88aaa32aef277055ee451d953c54d62ba5762605eafabcb7514018c0d189b-json.log",
        "Name": "/my-nginx",
        "RestartCount": 0,
        "Driver": "overlay2",
        "Platform": "linux",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "docker-default",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": null,
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "no",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "shareable",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 67108864,
            "Runtime": "runc",
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "",
            "CpuShares": 0,
            "Memory": 0,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": null,
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 0,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": [
                "/proc/acpi",
                "/proc/kcore",
                "/proc/keys",
                "/proc/latency_stats",
                "/proc/timer_list",
                "/proc/timer_stats",
                "/proc/sched_debug",
                "/proc/scsi",
                "/sys/firmware"
            ],
            "ReadonlyPaths": [
                "/proc/asound",
                "/proc/bus",
                "/proc/fs",
                "/proc/irq",
                "/proc/sys",
                "/proc/sysrq-trigger"
            ]
        },
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/831c15cd999cca6cdb97a07ca33d313c815c3609518840f80f11d22e21367d05-init/diff:/var/lib/docker/overlay2/f7bb0a716335df9e4231cab56a2c14d28ad6580bf60d5f40e537af769d8f66e3/diff:/var/lib/docker/overlay2/e50dfd2d7a13abd6cc59f8913ac318fc0da9d57da0f0e82bfbd1f470e9f9102f/diff:/var/lib/docker/overlay2/b763a6047e01bc1668608cbf61eb0dd43d63d151ff770c1c37519c5f0b383991/diff:/var/lib/docker/overlay2/30af13ed418fa17dde4f876fca4a6e159e75d7ba1f1d3ff7e16f0e74e3f583b8/diff:/var/lib/docker/overlay2/ea70cae85822f88bc9fa88602a40b81b6f7c41a2a086c988723c9128ea6bcadf/diff:/var/lib/docker/overlay2/506d20b8d14718424d7dc8d573f1bb6d5a0e21552cf4f86fb6cb1b1fa6c1af60/diff",
                "MergedDir": "/var/lib/docker/overlay2/831c15cd999cca6cdb97a07ca33d313c815c3609518840f80f11d22e21367d05/merged",
                "UpperDir": "/var/lib/docker/overlay2/831c15cd999cca6cdb97a07ca33d313c815c3609518840f80f11d22e21367d05/diff",
                "WorkDir": "/var/lib/docker/overlay2/831c15cd999cca6cdb97a07ca33d313c815c3609518840f80f11d22e21367d05/work"
            },
            "Name": "overlay2"
        },
        "Mounts": [],
        "Config": {
            "Hostname": "d1e88aaa32ae",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "80/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "NGINX_VERSION=1.21.6",
                "NJS_VERSION=0.7.3",
                "PKG_RELEASE=1~bullseye"
            ],
            "Cmd": [
                "nginx",
                "-g",
                "daemon off;"
            ],
            "Image": "nginx",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": [
                "/docker-entrypoint.sh"
            ],
            "OnBuild": null,
            "Labels": {
                "maintainer": "NGINX Docker Maintainers <docker-maint@nginx.com>"
            },
            "StopSignal": "SIGQUIT"
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "9afefdfc1ed341e598f3abec5415b28057a5fa90818889d274353e6184eae704",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "80/tcp": null
            },
            "SandboxKey": "/var/run/docker/netns/9afefdfc1ed3",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "a24765e94922e393a6b3e90a5c6c0d5c5641953af9da3c162fe434a1112ba767",
            "Gateway": "172.17.0.1",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "172.17.0.2",
            "IPPrefixLen": 16,
            "IPv6Gateway": "",
            "MacAddress": "02:42:ac:11:00:02",
            "Networks": {
                "bridge": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "ad02c8169ab437410a6660992c1e983a212bebe380f0ce1ba871a45a9c1b1140",
                    "EndpointID": "a24765e94922e393a6b3e90a5c6c0d5c5641953af9da3c162fe434a1112ba767",
                    "Gateway": "172.17.0.1",
                    "IPAddress": "172.17.0.2",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "02:42:ac:11:00:02",
                    "DriverOpts": null
                }
            }
        }
    }
]

## 엔진X 동작여부 
root@labs--311032102:/home/project/monolith2misvc# curl 172.17.0.2
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>

## image 파일안에 접속함 으로 접속함
root@labs--311032102:/home/project/monolith2misvc# docker exec -it my-nginx bash
root@d1e88aaa32ae:/# ls
bin   dev                  docker-entrypoint.sh  home  lib64  mnt  proc  run   srv  tmp  var
boot  docker-entrypoint.d  etc                   lib   media  opt  root  sbin  sys  usr
root@d1e88aaa32ae:/

##
docker run --name my-nginx -d -p 8080:80 nginx

==> 8080 -> 80 으로 nginx 처리함.  (-d 백그라운드)

root@labs--311032102:/home/project/monolith2misvc# docker run --name my-new-nginx -d -p 8081:80 nginx
656bcd4b4d7d74ba51fa7f2af3c45cd64b5d1fed888d78e85842bde974d29d6e
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker exec -it my-nginx bash^C
root@labs--311032102:/home/project/monolith2misvc# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   About a minute ago   Up 59 seconds       0.0.0.0:8081->80/tcp   my-new-nginx
d1e88aaa32ae        nginx               "/docker-entrypoin..."   20 minutes ago       Up 20 minutes       80/tcp                 my-nginx
root@labs--311032102:/home/project/monolith2misvc# curl :8081
curl: (3) Bad URL, colon is first character
root@labs--311032102:/home/project/monolith2misvc# http :8081
HTTP/1.1 200 OK
Accept-Ranges: bytes
Connection: keep-alive
Content-Length: 615
Content-Type: text/html
Date: Mon, 20 Jun 2022 01:35:48 GMT
ETag: "61f01158-267"
Last-Modified: Tue, 25 Jan 2022 15:03:52 GMT
Server: nginx/1.21.6

<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>

root@labs--311032102:/home/project/monolith2misvc# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   2 minutes ago       Up 2 minutes        0.0.0.0:8081->80/tcp   my-new-nginx
d1e88aaa32ae        nginx               "/docker-entrypoin..."   21 minutes ago      Up 21 minutes       80/tcp                 my-nginx
root@labs--311032102:/home/project/monolith2misvc# 

==> 로컬인터넷에서 container 확인하기 (8081 포트로 접속시 --> 80에서 처리함.)
https://8081-hanagcp-labs--311032102.kuberez.io/ 

root@labs--311032102:/home/project/monolith2misvc# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   2 minutes ago       Up 2 minutes        0.0.0.0:8081->80/tcp   my-new-nginx
d1e88aaa32ae        nginx               "/docker-entrypoin..."   21 minutes ago      Up 21 minutes       80/tcp                 my-nginx
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   9 minutes ago       Up 9 minutes        0.0.0.0:8081->80/tcp   my-new-nginx
d1e88aaa32ae        nginx               "/docker-entrypoin..."   29 minutes ago      Up 29 minutes       80/tcp                 my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   9 minutes ago       Up 9 minutes        0.0.0.0:8081->80/tcp   my-new-nginx
d1e88aaa32ae        nginx               "/docker-entrypoin..."   29 minutes ago      Up 29 minutes       80/tcp                 my-nginx
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker container stop my-nginx
my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
656bcd4b4d7d        nginx               "/docker-entrypoin..."   9 minutes ago       Up 9 minutes        0.0.0.0:8081->80/tcp   my-new-nginx
root@labs--311032102:/home/project/monolith2misvc# docker container stop my-new-nginx
my-new-nginx
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@labs--311032102:/home/project/monolith2misvc# docker container rm my-nginx
my-nginx
root@labs--311032102:/home/project/monolith2misvc# docker container ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@labs--311032102:/home/project/monolith2misvc# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker container rm my-new-nginx
my-new-nginx
root@labs--311032102:/home/project/monolith2misvc# docker image rm nginx
Untagged: nginx:latest
Untagged: nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514
Deleted: sha256:0e901e68141fd02f237cf63eb842529f8a9500636a9419e3cf4fb986b8fe3d5d
Deleted: sha256:1e877fb1acf761377390ab38bbad050a1d5296f1b4f51878c2695d4ecdb98c62
Deleted: sha256:834e54d50f731515065370d1c15f0ed47d2f7b6a7b0452646db80f14ace9b8de
Deleted: sha256:d28ca7ee17ff94497071d5c075b4099a4f2c950a3471fc49bdf9876227970b24
Deleted: sha256:096f97ba95539883af393732efac02acdd0e2ae587a5479d97065b64b4eded8c
Deleted: sha256:de7e3b2a7430261fde88313fbf784a63c2229ce369b9116053786845c39058d5
Deleted: sha256:ad6562704f3759fb50f0d3de5f80a38f65a85e709b77fd24491253990f30b6be
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# 
root@labs--311032102:/home/project/monolith2misvc# docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
root@labs--311032102:/home/project/monolith2misvc# 

## PING 설치 (우분투계역 apt-get 사용)
- linux install ping command
- apt update 
- PING 설치 : apt-get install iputils-ping -y

## 
docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)

## httpd 설치 

docker run -dit --name my-running-app -p 8080:80 httpd


##

root@labs--311032102:~# ls -al
total 84
drwx------ 1 root root 4096 Jun 14 05:34 .
drwxr-xr-x 1 root root 4096 Jun 12 15:20 ..
-rw------- 1 root root 2185 Jun 14 05:50 .bash_history
-rw-r--r-- 1 root root 3148 May 17 06:07 .bashrc
drwxr-xr-x 1 root root 4096 Jun 13 02:07 .cache
drwxr-xr-x 1 root root 4096 Jun 14 02:19 .config
drwx------ 2 root root 4096 Jun 14 05:33 .docker
-rw-r--r-- 1 root root  298 May 17 06:07 .fzf.bash
drwx------ 1 root root 4096 May  4 19:53 .gnupg
drwx------ 2 root root 4096 Jun 13 00:30 .httpie
drwxr-xr-x 4 root root 4096 Jun 14 05:19 .kube
drwx------ 4 root root 4096 May  4 19:51 .local
drwxr-xr-x 3 root root 4096 Jun 13 00:10 .m2
drwxr-xr-x 4 root root 4096 Jun 14 02:19 .npm
-rw-r--r-- 1 root root  148 Aug 17  2015 .profile
drwxr-x--- 2 root root 4096 Jun 13 00:15 .siege
drwxr-xr-x 6 root root 4096 Jun 13 00:06 .theia
-rw------- 1 root root 4441 Jun 14 05:34 .viminfo
-rw-r--r-- 1 root root  203 May 17 06:07 .wget-hsts
root@labs--311032102:~# cd .docker
root@labs--311032102:~/.docker# ls
config.json
root@labs--311032102:~/.docker# 
root@labs--311032102:~/.docker# 
root@labs--311032102:~/.docker# ls
config.json
root@labs--311032102:~/.docker# vi *
root@labs--311032102:~/.docker# 
root@labs--311032102:~/.docker# cat config.json
{
        "auths": {
                "https://index.docker.io/v1/": {
                        "auth": "Z29yYXBhZGQ6a2ViMjEzMTg1IQ=="    <== base64 풀면 됨..
                }
        }
}root@labs--311032102:~/.docker# 
root@labs--311032102:~/.docker# 


root@labs--311032102:~# . ~/.bashrc
root@labs--311032102:~# 
root@labs--311032102:~# 
root@labs--311032102:~# . ~/.bashr^C
root@labs--311032102:~# 
root@labs--311032102:~# source ~/.bashrc

====================================


root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# ls -lrt
total 84
drwxr-xr-x 2 root root 4096 Jun  9 00:14 default-env
drwxr-xr-x 7 root root 4096 Jun  9 00:17 shopping
drwxr-xr-x 6 root root 4096 Jun 10 02:18 cna-start
drwxr-xr-x 3 root root 4096 Jun 10 04:26 gateway
drwxr-xr-x 3 root root 4096 Jun 10 05:06 oauth2
drwxr-xr-x 5 root root 4096 Jun 10 05:41 Oauth2withKeycloak
drwxr-xr-x 5 root root 4096 Jun 10 06:06 monolith2misvc
drwxr-xr-x 3 root root 4096 Jun 10 07:17 circuitbreaker
drwxr-xr-x 2 root root 4096 Jun 13 01:19 kafka-base
drwxr-xr-x 5 root root 4096 Jun 13 01:58 Keycloak-OAuth2-1
drwxr-xr-x 3 root root 4096 Jun 13 02:05 cna-pubsub
drwxr-xr-x 4 root root 4096 Jun 13 02:53 cna-pubsub2
drwxr-xr-x 8 root root 4096 Jun 13 05:34 Kafka-Scaling
drwxr-xr-x 7 root root 4096 Jun 13 05:34 Kafka-Retry-DLQ
drwxr-xr-x 7 root root 4096 Jun 13 06:51 Kafka-Manual-Commit
drwxr-xr-x 7 root root 4096 Jun 14 00:21 advanced-connect
drwxr-xr-x 6 root root 4096 Jun 14 01:08 dp-composite-svc
drwxr-xr-x 4 root root 4096 Jun 14 02:12 dp-graphql
drwxr-xr-x 3 root root 4096 Jun 14 02:27 dp-cqrs
drwxr-xr-x 4 root root 4096 Jun 14 04:24 contract-test
drwxr-xr-x 3 root root 4096 Jun 14 05:08 ops-deploy-my-app
root@labs--311032102:/home/project# cp /index.html .
cp: cannot stat '/index.html': No such file or directory
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# cd ^C
root@labs--311032102:/home/project# ls /root/index.html
/root/index.html
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# set -o vi
root@labs--311032102:/home/project# cp /root/index.html /home/project
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# cd /home/project*
root@labs--311032102:/home/project# ls
Kafka-Manual-Commit  Keycloak-OAuth2-1   circuitbreaker  cna-start      dp-composite-svc  gateway     monolith2misvc     shopping
Kafka-Retry-DLQ      Oauth2withKeycloak  cna-pubsub      contract-test  dp-cqrs           index.html  oauth2
Kafka-Scaling        advanced-connect    cna-pubsub2     default-env    dp-graphql        kafka-base  ops-deploy-my-app
root@labs--311032102:/home/project# ls -lrt
total 88
drwxr-xr-x 2 root root 4096 Jun  9 00:14 default-env
drwxr-xr-x 7 root root 4096 Jun  9 00:17 shopping
drwxr-xr-x 6 root root 4096 Jun 10 02:18 cna-start
drwxr-xr-x 3 root root 4096 Jun 10 04:26 gateway
drwxr-xr-x 3 root root 4096 Jun 10 05:06 oauth2
drwxr-xr-x 5 root root 4096 Jun 10 05:41 Oauth2withKeycloak
drwxr-xr-x 5 root root 4096 Jun 10 06:06 monolith2misvc
drwxr-xr-x 3 root root 4096 Jun 10 07:17 circuitbreaker
drwxr-xr-x 2 root root 4096 Jun 13 01:19 kafka-base
drwxr-xr-x 5 root root 4096 Jun 13 01:58 Keycloak-OAuth2-1
drwxr-xr-x 3 root root 4096 Jun 13 02:05 cna-pubsub
drwxr-xr-x 4 root root 4096 Jun 13 02:53 cna-pubsub2
drwxr-xr-x 8 root root 4096 Jun 13 05:34 Kafka-Scaling
drwxr-xr-x 7 root root 4096 Jun 13 05:34 Kafka-Retry-DLQ
drwxr-xr-x 7 root root 4096 Jun 13 06:51 Kafka-Manual-Commit
drwxr-xr-x 7 root root 4096 Jun 14 00:21 advanced-connect
drwxr-xr-x 6 root root 4096 Jun 14 01:08 dp-composite-svc
drwxr-xr-x 4 root root 4096 Jun 14 02:12 dp-graphql
drwxr-xr-x 3 root root 4096 Jun 14 02:27 dp-cqrs
drwxr-xr-x 4 root root 4096 Jun 14 04:24 contract-test
drwxr-xr-x 3 root root 4096 Jun 14 05:08 ops-deploy-my-app
-rw-r--r-- 1 root root   46 Jun 20 02:21 index.html
root@labs--311032102:/home/project# ls
Kafka-Manual-Commit  Keycloak-OAuth2-1   circuitbreaker  cna-start      dp-composite-svc  gateway     monolith2misvc     shopping
Kafka-Retry-DLQ      Oauth2withKeycloak  cna-pubsub      contract-test  dp-cqrs           index.html  oauth2
Kafka-Scaling        advanced-connect    cna-pubsub2     default-env    dp-graphql        kafka-base  ops-deploy-my-app
root@labs--311032102:/home/project# vi Dockerfile
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# ls -lrt
total 92
drwxr-xr-x 2 root root 4096 Jun  9 00:14 default-env
drwxr-xr-x 7 root root 4096 Jun  9 00:17 shopping
drwxr-xr-x 6 root root 4096 Jun 10 02:18 cna-start
drwxr-xr-x 3 root root 4096 Jun 10 04:26 gateway
drwxr-xr-x 3 root root 4096 Jun 10 05:06 oauth2
drwxr-xr-x 5 root root 4096 Jun 10 05:41 Oauth2withKeycloak
drwxr-xr-x 5 root root 4096 Jun 10 06:06 monolith2misvc
drwxr-xr-x 3 root root 4096 Jun 10 07:17 circuitbreaker
drwxr-xr-x 2 root root 4096 Jun 13 01:19 kafka-base
drwxr-xr-x 5 root root 4096 Jun 13 01:58 Keycloak-OAuth2-1
drwxr-xr-x 3 root root 4096 Jun 13 02:05 cna-pubsub
drwxr-xr-x 4 root root 4096 Jun 13 02:53 cna-pubsub2
drwxr-xr-x 8 root root 4096 Jun 13 05:34 Kafka-Scaling
drwxr-xr-x 7 root root 4096 Jun 13 05:34 Kafka-Retry-DLQ
drwxr-xr-x 7 root root 4096 Jun 13 06:51 Kafka-Manual-Commit
drwxr-xr-x 7 root root 4096 Jun 14 00:21 advanced-connect
drwxr-xr-x 6 root root 4096 Jun 14 01:08 dp-composite-svc
drwxr-xr-x 4 root root 4096 Jun 14 02:12 dp-graphql
drwxr-xr-x 3 root root 4096 Jun 14 02:27 dp-cqrs
drwxr-xr-x 4 root root 4096 Jun 14 04:24 contract-test
drwxr-xr-x 3 root root 4096 Jun 14 05:08 ops-deploy-my-app
-rw-r--r-- 1 root root   46 Jun 20 02:21 index.html
-rw-r--r-- 1 root root   50 Jun 20 02:22 Dockerfile
root@labs--311032102:/home/project# vi Dockerfile
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# cat Dockerfile
FROM nginx
COPY index.html /usr/share/nginx/html/
root@labs--311032102:/home/project# 
root@labs--311032102:/home/project# ls -lrt
total 92
drwxr-xr-x 2 root root 4096 Jun  9 00:14 default-env
drwxr-xr-x 7 root root 4096 Jun  9 00:17 shopping
drwxr-xr-x 6 root root 4096 Jun 10 02:18 cna-start
drwxr-xr-x 3 root root 4096 Jun 10 04:26 gateway
drwxr-xr-x 3 root root 4096 Jun 10 05:06 oauth2
drwxr-xr-x 5 root root 4096 Jun 10 05:41 Oauth2withKeycloak
drwxr-xr-x 5 root root 4096 Jun 10 06:06 monolith2misvc
drwxr-xr-x 3 root root 4096 Jun 10 07:17 circuitbreaker
drwxr-xr-x 2 root root 4096 Jun 13 01:19 kafka-base
drwxr-xr-x 5 root root 4096 Jun 13 01:58 Keycloak-OAuth2-1
drwxr-xr-x 3 root root 4096 Jun 13 02:05 cna-pubsub
drwxr-xr-x 4 root root 4096 Jun 13 02:53 cna-pubsub2
drwxr-xr-x 8 root root 4096 Jun 13 05:34 Kafka-Scaling
drwxr-xr-x 7 root root 4096 Jun 13 05:34 Kafka-Retry-DLQ
drwxr-xr-x 7 root root 4096 Jun 13 06:51 Kafka-Manual-Commit
drwxr-xr-x 7 root root 4096 Jun 14 00:21 advanced-connect
drwxr-xr-x 6 root root 4096 Jun 14 01:08 dp-composite-svc
drwxr-xr-x 4 root root 4096 Jun 14 02:12 dp-graphql
drwxr-xr-x 3 root root 4096 Jun 14 02:27 dp-cqrs
drwxr-xr-x 4 root root 4096 Jun 14 04:24 contract-test
drwxr-xr-x 3 root root 4096 Jun 14 05:08 ops-deploy-my-app
-rw-r--r-- 1 root root   46 Jun 20 02:21 index.html
-rw-r--r-- 1 root root   50 Jun 20 02:22 Dockerfile
root@labs--311032102:/home/project# docker build -t gorapadd/welcome:v1 -f Dockerfile
"docker build" requires exactly 1 argument(s).
See 'docker build --help'.

Usage:  docker build [OPTIONS] PATH | URL | -

Build an image from a Dockerfile
root@labs--311032102:/home/project# docker build -t gorapadd/welcome:v1 -f .
"docker build" requires exactly 1 argument(s).
See 'docker build --help'.

Usage:  docker build [OPTIONS] PATH | URL | -

Build an image from a Dockerfile
root@labs--311032102:/home/project# docker build -t gorapadd/welcome:v1  .
Sending build context to Docker daemon 688.4 MB
Step 1/2 : FROM nginx
latest: Pulling from library/nginx
42c077c10790: Already exists 
62c70f376f6a: Pull complete 
915cc9bd79c2: Pull complete 
75a963e94de0: Pull complete 
7b1fab684d70: Pull complete 
db24d06d5af4: Pull complete 
Digest: sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514
Status: Downloaded newer image for nginx:latest
 ---> 0e901e68141f
Step 2/2 : COPY index.html /usr/share/nginx/html/
 ---> a6f8064d8aeb
Successfully built a6f8064d8aeb
Successfully tagged gorapadd/welcome:v1
root@labs--311032102:/home/project# docker push -t gorapadd/welcome:v1  .
unknown shorthand flag: 't' in -t
See 'docker push --help'.
root@labs--311032102:/home/project# docker push  gorapadd/welcome:v1  .
"docker push" requires exactly 1 argument(s).
See 'docker push --help'.

Usage:  docker push [OPTIONS] NAME[:TAG]

Push an image or a repository to a registry
root@labs--311032102:/home/project# docker push  gorapadd/welcome:v1  
The push refers to repository [docker.io/gorapadd/welcome]
ba08f6ab43af: Pushed 
33e3df466e11: Mounted from library/nginx 
747b7a567071: Mounted from library/nginx 
57d3fc88cb3f: Mounted from library/nginx 
53ae81198b64: Mounted from library/nginx 
58354abe5f0e: Mounted from library/nginx 
ad6562704f37: Mounted from library/nginx 
v1: digest: sha256:2174131f6d63f155d3b9d6b0c8aab976f4ee56ed40e7e041b627b58ecba0ec61 size: 1777
root@labs--311032102:/home/project# docker run -p 8091:80 gorapadd/welcome:v1


root@labs--311032102:/home/project# netstat -lntp | grep :808 
tcp6       0      0 :::8080                 :::*                    LISTEN      -                   
root@labs--311032102:/home/project# docker run nginx -p 8090:80 gorapadd/welcome:v1
/docker-entrypoint.sh: 38: exec: -p: not found
root@labs--311032102:/home/project# docker run  -p 8090:80 gorapadd/welcome:v1
docker: Error response from daemon: driver failed programming external connectivity on endpoint nifty_raman (e7529d8788e60f57c3cdc1b2fb352507cf07e90fd7378fd332fa6f9dca7703fc): Error starting userland proxy: listen tcp 0.0.0.0:8090: bind: address already in use.
root@labs--311032102:/home/project# docker run -d  -p 8090:80 gorapadd/welcome:v1
e2cd835b1b2196506d2e176a0832b30fed3cbd77a3417e982770898cd228b718
docker: Error response from daemon: driver failed programming external connectivity on endpoint silly_pascal (197da9b43cba30f1e87f29116aad537584b145b095f293b46ba51b8caf3a77d7): Error starting userland proxy: listen tcp 0.0.0.0:8090: bind: address already in use.
root@labs--311032102:/home/project# docker run -d  -p 8091:80 gorapadd/welcome:v1
0d806e5b83f6017e03b533a54c7a1730f9dfff9025bf5c4e4b976887114c541d
root@labs--311032102:/home/project# docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gorapadd/welcome    v1                  a6f8064d8aeb        6 minutes ago       142 MB
gorapadd/order      2022061401          83818081755e        5 days ago          165 MB
jinyoung/order      2022061401          1d349b76aa1e        5 days ago          165 MB
httpd               latest              b260a49eebf9        6 days ago          145 MB
nginx               latest              0e901e68141f        3 weeks ago         142 MB
openjdk             8u212-jdk-alpine    a3562aa0b991        3 years ago         105 MB
root@labs--311032102:/home/project# docker container ls
CONTAINER ID        IMAGE                 COMMAND                  CREATED             STATUS              PORTS                  NAMES
0d806e5b83f6        gorapadd/welcome:v1   "/docker-entrypoin..."   19 seconds ago      Up 18 seconds       0.0.0.0:8091->80/tcp   naughty_mahavira
8b55e1bad221        httpd                 "httpd-foreground"       42 minutes ago      Up 42 minutes       0.0.0.0:8080->80/tcp   my-running-app


root@labs--311032102:/home/project# echo "dd"| base64 -d 
ubase64: invalid input
root@labs--311032102:/home/project# which base64
/usr/bin/base64
root@labs--311032102:/home/project# echo "dklsajflds" | base64 -d
vIlj7�vbase64: invalid input
root@labs--311032102:/home/project# echo "dklsajflds" | base64
ZGtsc2FqZmxkcwo=
root@labs--311032102:/home/project# echo "ZGtsc2FqZmxkcwo=" | base64 -d
dklsajflds

root@labs--311032102:/home/project# http :8091
HTTP/1.1 200 OK
Accept-Ranges: bytes
Connection: keep-alive
Content-Length: 46
Content-Type: text/html
Date: Mon, 20 Jun 2022 02:38:06 GMT
ETag: "62afd9a4-2e"
Last-Modified: Mon, 20 Jun 2022 02:21:24 GMT
Server: nginx/1.21.6

<h1> Hi~ My name is Hong Gil-Dong...~~~ </h1>

## AWS

	접속 URL		https://uengine2.signin.aws.amazon.com/console			
No,	이름	ID	PW	액세스 키 ID	비밀 액세스 키	리전
1	서준성	user01	hana!@12	AKIA6H47RAWMWZN6CVHT	RgsIq9d/L4bd9bs2ot8V6I/uIkzPMijxAqd2Af4y	(도쿄)ap-northeast-1
2	정연욱	user02	hana!@12	AKIA6H47RAWMZAAJRW7C	GrwZSP53C+0ocKODo1hF6/w44JmKoZmMtKKU0v7I	(도쿄)ap-northeast-1

## uengine2 , user02 , hana!@12 ==> 로그인 

root@labs--311032102:/home/project# cc/cccc/cccc^C
root@labs--311032102:/home/project# aws configure
AWS Access Key ID [None]: user02
AWS Secret Access Key [None]: AKIA6H47RAWMZAAJRW7C
Default region name [None]: ap-northeast-1
Default output format [None]: json
root@labs--311032102:/home/project# eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 5 --nodes-min 1 --nodes-max 3
Error: cannot use --nodes-max=3 and --nodes=5 at the same time
root@labs--311032102:/home/project# eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 3 --nodes-min 1 --nodes-max 3
Error: checking AWS STS access – cannot get role ARN for current session: operation error STS: GetCallerIdentity, https response error StatusCode: 403, RequestID: 7b6db17f-5a1b-4c04-8f54-9beb12b40f0f, api error InvalidClientTokenId: The security token included in the request is invalid.
root@labs--311032102:/home/project# eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 3 --nodes-min 1 --nodes-max 3^C
root@labs--311032102:/home/project# ls
Dockerfile           Oauth2withKeycloak  cna-start         dp-graphql      oauth2
Kafka-Manual-Commit  advanced-connect    contract-test     gateway         ops-deploy-my-app
Kafka-Retry-DLQ      circuitbreaker      default-env       index.html      shopping
Kafka-Scaling        cna-pubsub          dp-composite-svc  kafka-base
Keycloak-OAuth2-1    cna-pubsub2         dp-cqrs           monolith2misvc
root@labs--311032102:/home/project# ks -lrt^C
root@labs--311032102:/home/project# ls -lrt
total 92
drwxr-xr-x 2 root root 4096 Jun  9 00:14 default-env
drwxr-xr-x 7 root root 4096 Jun  9 00:17 shopping
drwxr-xr-x 6 root root 4096 Jun 10 02:18 cna-start
drwxr-xr-x 3 root root 4096 Jun 10 04:26 gateway
drwxr-xr-x 3 root root 4096 Jun 10 05:06 oauth2
drwxr-xr-x 5 root root 4096 Jun 10 05:41 Oauth2withKeycloak
drwxr-xr-x 5 root root 4096 Jun 10 06:06 monolith2misvc
drwxr-xr-x 3 root root 4096 Jun 10 07:17 circuitbreaker
drwxr-xr-x 2 root root 4096 Jun 13 01:19 kafka-base
drwxr-xr-x 5 root root 4096 Jun 13 01:58 Keycloak-OAuth2-1
drwxr-xr-x 3 root root 4096 Jun 13 02:05 cna-pubsub
drwxr-xr-x 4 root root 4096 Jun 13 02:53 cna-pubsub2
drwxr-xr-x 8 root root 4096 Jun 13 05:34 Kafka-Scaling
drwxr-xr-x 7 root root 4096 Jun 13 05:34 Kafka-Retry-DLQ
drwxr-xr-x 7 root root 4096 Jun 13 06:51 Kafka-Manual-Commit
drwxr-xr-x 7 root root 4096 Jun 14 00:21 advanced-connect
drwxr-xr-x 6 root root 4096 Jun 14 01:08 dp-composite-svc
drwxr-xr-x 4 root root 4096 Jun 14 02:12 dp-graphql
drwxr-xr-x 3 root root 4096 Jun 14 02:27 dp-cqrs
drwxr-xr-x 4 root root 4096 Jun 14 04:24 contract-test
drwxr-xr-x 3 root root 4096 Jun 14 05:08 ops-deploy-my-app
-rw-r--r-- 1 root root   46 Jun 20 02:21 index.html
-rw-r--r-- 1 root root   50 Jun 20 02:22 Dockerfile
root@labs--311032102:/home/project# cd 
root@labs--311032102:~# ls -lrt
total 4
-rw-r--r-- 1 root root 46 Jun 20 02:20 index.html
root@labs--311032102:~# ls -lr
total 4
-rw-r--r-- 1 root root 46 Jun 20 02:20 index.html
root@labs--311032102:~# ls -lrt
total 4
-rw-r--r-- 1 root root 46 Jun 20 02:20 index.html
root@labs--311032102:~# ls -la
total 108
drwx------ 1 root root  4096 Jun 20 04:20 .
drwxr-xr-x 1 root root  4096 Jun 12 15:20 ..
drwxr-xr-x 2 root root  4096 Jun 20 04:20 .aws
-rw------- 1 root root  2185 Jun 14 05:50 .bash_history
-rw-r--r-- 1 root root  3141 Jun 20 02:17 .bashrc
drwxr-xr-x 1 root root  4096 Jun 13 02:07 .cache
drwxr-xr-x 1 root root  4096 Jun 14 02:19 .config
drwxr-xr-x 2 root root  4096 Jun 20 02:16 .dart
drwxr-xr-x 4 root root  4096 Jun 20 02:16 .dartServer
drwx------ 2 root root  4096 Jun 20 02:53 .docker
-rw-r--r-- 1 root root   298 May 17 06:07 .fzf.bash
drwx------ 1 root root  4096 May  4 19:53 .gnupg
drwx------ 2 root root  4096 Jun 13 00:30 .httpie
drwxr-xr-x 4 root root  4096 Jun 14 05:19 .kube
drwx------ 4 root root  4096 May  4 19:51 .local
drwxr-xr-x 3 root root  4096 Jun 13 00:10 .m2
drwxr-xr-x 4 root root  4096 Jun 14 02:19 .npm
-rw-r--r-- 1 root root   148 Aug 17  2015 .profile
drwxr-x--- 2 root root  4096 Jun 13 00:15 .siege
drwxr-xr-x 6 root root  4096 Jun 13 00:06 .theia
-rw------- 1 root root 13597 Jun 20 02:53 .viminfo
-rw-r--r-- 1 root root   203 May 17 06:07 .wget-hsts
-rw-r--r-- 1 root root    46 Jun 20 02:20 index.html
root@labs--311032102:~# cd .asw
bash: cd: .asw: No such file or directory
root@labs--311032102:~# cd .aws
root@labs--311032102:~/.aws# ls
config  credentials
root@labs--311032102:~/.aws# ls -lrt
total 8
-rw------- 1 root root 82 Jun 20 04:20 credentials
-rw------- 1 root root 48 Jun 20 04:20 config
root@labs--311032102:~/.aws# cd config
bash: cd: config: Not a directory
root@labs--311032102:~/.aws# ls
config  credentials
root@labs--311032102:~/.aws# aws configuration

usage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]
To see help text, you can run:

  aws help
  aws <command> help
  aws <command> <subcommand> help

aws: error: argument command: Invalid choice, valid choices are:

accessanalyzer                           | account                                 
acm                                      | acm-pca                                 
alexaforbusiness                         | amp                                     
amplify                                  | amplifybackend                          
amplifyuibuilder                         | apigateway                              
apigatewaymanagementapi                  | apigatewayv2                            
appconfig                                | appconfigdata                           
appflow                                  | appintegrations                         
application-autoscaling                  | application-insights                    
applicationcostprofiler                  | appmesh                                 
apprunner                                | appstream                               
appsync                                  | athena                                  
auditmanager                             | autoscaling                             
autoscaling-plans                        | backup                                  
backup-gateway                           | batch                                   
billingconductor                         | braket                                  
budgets                                  | ce                                      
chime                                    | chime-sdk-identity                      
chime-sdk-media-pipelines                | chime-sdk-meetings                      
chime-sdk-messaging                      | cloud9                                  
cloudcontrol                             | clouddirectory                          
cloudformation                           | cloudfront                              
cloudhsm                                 | cloudhsmv2                              
cloudsearch                              | cloudsearchdomain                       
cloudtrail                               | cloudwatch                              
codeartifact                             | codebuild                               
codecommit                               | codeguru-reviewer                       
codeguruprofiler                         | codepipeline                            
codestar                                 | codestar-connections                    
codestar-notifications                   | cognito-identity                        
cognito-idp                              | cognito-sync                            
comprehend                               | comprehendmedical                       
compute-optimizer                        | connect                                 
connect-contact-lens                     | connectparticipant                      
cur                                      | customer-profiles                       
databrew                                 | dataexchange                            
datapipeline                             | datasync                                
dax                                      | detective                               
devicefarm                               | devops-guru                             
directconnect                            | discovery                               
dlm                                      | dms                                     
docdb                                    | drs                                     
ds                                       | dynamodb                                
dynamodbstreams                          | ebs                                     
ec2                                      | ec2-instance-connect                    
ecr                                      | ecr-public                              
ecs                                      | efs                                     
eks                                      | elastic-inference                       
elasticache                              | elasticbeanstalk                        
elastictranscoder                        | elb                                     
elbv2                                    | emr                                     
emr-containers                           | es                                      
events                                   | evidently                               
finspace                                 | finspace-data                           
firehose                                 | fis                                     
fms                                      | forecast                                
forecastquery                            | frauddetector                           
fsx                                      | gamelift                                
gamesparks                               | glacier                                 
globalaccelerator                        | glue                                    
grafana                                  | greengrass                              
greengrassv2                             | groundstation                           
guardduty                                | health                                  
healthlake                               | honeycode                               
iam                                      | identitystore                           
imagebuilder                             | importexport                            
inspector                                | inspector2                              
iot                                      | iot-data                                
iot-jobs-data                            | iot1click-devices                       
iot1click-projects                       | iotanalytics                            
iotdeviceadvisor                         | iotevents                               
iotevents-data                           | iotfleethub                             
iotsecuretunneling                       | iotsitewise                             
iotthingsgraph                           | iottwinmaker                            
iotwireless                              | ivs                                     
ivschat                                  | kafka                                   
kafkaconnect                             | kendra                                  
keyspaces                                | kinesis                                 
kinesis-video-archived-media             | kinesis-video-media                     
kinesis-video-signaling                  | kinesisanalytics                        
kinesisanalyticsv2                       | kinesisvideo                            
kms                                      | lakeformation                           
lambda                                   | lex-models                              
lex-runtime                              | lexv2-models                            
lexv2-runtime                            | license-manager                         
lightsail                                | location                                
logs                                     | lookoutequipment                        
lookoutmetrics                           | lookoutvision                           
machinelearning                          | macie                                   
macie2                                   | managedblockchain                       
marketplace-catalog                      | marketplace-entitlement                 
marketplacecommerceanalytics             | mediaconnect                            
mediaconvert                             | medialive                               
mediapackage                             | mediapackage-vod                        
mediastore                               | mediastore-data                         
mediatailor                              | memorydb                                
meteringmarketplace                      | mgh                                     
mgn                                      | migration-hub-refactor-spaces           
migrationhub-config                      | migrationhubstrategy                    
mobile                                   | mq                                      
mturk                                    | mwaa                                    
neptune                                  | network-firewall                        
networkmanager                           | nimble                                  
opensearch                               | opsworks                                
opsworkscm                               | organizations                           
outposts                                 | panorama                                
personalize                              | personalize-events                      
personalize-runtime                      | pi                                      
pinpoint                                 | pinpoint-email                          
pinpoint-sms-voice                       | pinpoint-sms-voice-v2                   
polly                                    | pricing                                 
proton                                   | qldb                                    
qldb-session                             | quicksight                              
ram                                      | rbin                                    
rds                                      | rds-data                                
redshift                                 | redshift-data                           
rekognition                              | resiliencehub                           
resource-groups                          | resourcegroupstaggingapi                
robomaker                                | route53                                 
route53-recovery-cluster                 | route53-recovery-control-config         
route53-recovery-readiness               | route53domains                          
route53resolver                          | rum                                     
s3control                                | s3outposts                              
sagemaker                                | sagemaker-a2i-runtime                   
sagemaker-edge                           | sagemaker-featurestore-runtime          
sagemaker-runtime                        | savingsplans                            
schemas                                  | sdb                                     
secretsmanager                           | securityhub                             
serverlessrepo                           | service-quotas                          
servicecatalog                           | servicecatalog-appregistry              
servicediscovery                         | ses                                     
sesv2                                    | shield                                  
signer                                   | sms                                     
snow-device-management                   | snowball                                
sns                                      | sqs                                     
ssm                                      | ssm-contacts                            
ssm-incidents                            | sso                                     
sso-admin                                | sso-oidc                                
stepfunctions                            | storagegateway                          
sts                                      | support                                 
swf                                      | synthetics                              
textract                                 | timestream-query                        
timestream-write                         | transcribe                              
transfer                                 | translate                               
voice-id                                 | waf                                     
waf-regional                             | wafv2                                   
wellarchitected                          | wisdom                                  
workdocs                                 | worklink                                
workmail                                 | workmailmessageflow                     
workspaces                               | workspaces-web                          
xray                                     | s3api                                   
s3                                       | ddb                                     
configure                                | deploy                                  
configservice                            | opsworks-cm                             
history                                  | cli-dev                                 
help                                    

root@labs--311032102:~/.aws# aws configure
AWS Access Key ID [****************er02]: AKIA6H47RAWMZAAJRW7C
AWS Secret Access Key [****************RW7C]: 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
Default region name [ap-northeast-1]: ap-northeast-1
Default output format [json]: 
root@labs--311032102:~/.aws# 
root@labs--311032102:~/.aws# eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 5 --nodes-min 1 --nodes-max 3
Error: cannot use --nodes-max=3 and --nodes=5 at the same time
root@labs--311032102:~/.aws# eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 3 --nodes-min 1 --nodes-max 3
2022-06-20 04:26:00 [ℹ]  eksctl version 0.97.0
2022-06-20 04:26:00 [ℹ]  using region ap-northeast-1
2022-06-20 04:26:00 [ℹ]  setting availability zones to [ap-northeast-1a ap-northeast-1c ap-northeast-1d]
2022-06-20 04:26:00 [ℹ]  subnets for ap-northeast-1a - public:192.168.0.0/19 private:192.168.96.0/19
2022-06-20 04:26:00 [ℹ]  subnets for ap-northeast-1c - public:192.168.32.0/19 private:192.168.128.0/19
2022-06-20 04:26:00 [ℹ]  subnets for ap-northeast-1d - public:192.168.64.0/19 private:192.168.160.0/19
2022-06-20 04:26:00 [ℹ]  nodegroup "standard-workers" will use "" [AmazonLinux2/1.19]
2022-06-20 04:26:00 [ℹ]  using Kubernetes version 1.19
2022-06-20 04:26:00 [ℹ]  creating EKS cluster "user02-eks" in "ap-northeast-1" region with managed nodes
2022-06-20 04:26:00 [ℹ]  will create 2 separate CloudFormation stacks for cluster itself and the initial managed nodegroup
2022-06-20 04:26:00 [ℹ]  if you encounter any issues, check CloudFormation console or try 'eksctl utils describe-stacks --region=ap-northeast-1 --cluster=user02-eks'
2022-06-20 04:26:00 [ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "user02-eks" in "ap-northeast-1"
2022-06-20 04:26:00 [ℹ]  CloudWatch logging will not be enabled for cluster "user02-eks" in "ap-northeast-1"
2022-06-20 04:26:00 [ℹ]  you can enable it with 'eksctl utils update-cluster-logging --enable-types={SPECIFY-YOUR-LOG-TYPES-HERE (e.g. all)} --region=ap-northeast-1 --cluster=user02-eks'
2022-06-20 04:26:00 [ℹ]  
2 sequential tasks: { create cluster control plane "user02-eks", 
    2 sequential sub-tasks: { 
        wait for control plane to become ready,
        create managed nodegroup "standard-workers",
    } 
}
2022-06-20 04:26:00 [ℹ]  building cluster stack "eksctl-user02-eks-cluster"
2022-06-20 04:26:01 [ℹ]  deploying stack "eksctl-user02-eks-cluster"
2022-06-20 04:26:31 [ℹ]  waiting for CloudFormation stack "eksctl-user02-eks-cluster"
2022-06-20 04:27:01 [ℹ]  waiting for CloudFormation stack "eksctl-user02-eks-cluster"

eksctl create cluster --name [mycluster-userid] --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 5 --nodes-min 1 --nodes-max 3
eksctl create cluster --name user02-eks --version 1.19 --spot --managed --nodegroup-name standard-workers --node-type t3.medium --nodes 5 --nodes-min 1 --nodes-max 3

root@labs--311032102:/home/project/monolith2misvc# kubectl get nodes
Kubeconfig user entry is using deprecated API version client.authentication.k8s.io/v1alpha1. Run 'aws eks update-kubeconfig' to update.
NAME                                               STATUS   ROLES    AGE   VERSION
ip-192-168-29-79.ap-northeast-1.compute.internal   Ready    <none>   15m   v1.19.15-eks-9c63c4
ip-192-168-45-77.ap-northeast-1.compute.internal   Ready    <none>   15m   v1.19.15-eks-9c63c4
ip-192-168-91-26.ap-northeast-1.compute.internal   Ready    <none>   15m   v1.19.15-eks-9c63c4

--> REGION 변경 
root@labs--311032102:/home/project/monolith2misvc# aws eks --region ap-northeast-1 update-kubeconfig --name user02-eks
Added new context arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks to /root/.kube/config
root@labs--311032102:/home/project/monolith2misvc# 

root@labs--311032102:/home/project/monolith2misvc# cat /root/.kube/config
apiVersion: v1
clusters:
- cluster:
    insecure-skip-tls-verify: true
    server: https://35.189.156.127
  name: kcb-test2.k8s.local
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREEwTXpFMU9Gb1hEVE15TURZeE56QTBNekUxT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHNECkhWUHNhMUVuUGhNdjR3NkZXa01KR2oyd1V0UHNGWmxKRGhGK3ZBNkwvS293OUJEVW5KTG5IdXFrWXl1ZlBtSDIKNSs0aTNQZVUzeWIzckFCTGdZRlNpU2k2VERCbVFXejVxbGNOeUxlYU5CWExvNFlFdFNNWTBhcFlYMVF4RFBlKwprM2l5VXdjMkpNa0xEVTM2clpFR3pyYi8zZFZ3c05BUmJHUjZmd3gxMEZpYXR3cVRnUVpmK2JOZ05NdWplR0p2CmJIRER2eHEzaFVSa3kvUjNlNUxPNDlWNTBLbzFPR21DSitDaVliY0tFY0tWanU2SmptYVhwNjU5VU83LzNMTmwKVDl2bTVlTHhLYkZkYTA1SWtzeno2TUZ1SFhmdTdCZm05Y3NzYzkrZFRJZlVrR05YVTFsV3pkMFVnbS9Vb0RTbgpHRGoyeXFwOERSY1RQMzI2bkFFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZKT0VRbFpERWVYN2Nnc1BXOG9meEdQcUdodjZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQ01vTWtKazQxV1l6elU2OEg3aml6SFByWkpaYTg2UGJ0T203YXlwNllrbnJjeVMvTQpPaStQLyt4NjM2N3dHYTc0bjFsSkFTRHpFS3dFV013U2NKRmxKUU5qWExoRW5obUhWa3FLRXZ4SUNEa3YyZVA2CmdRZ1p4OFcwT3QyeWxnR1lvdU1yb09zL1RlSXJDR3dtcmVZR2pEUHh3RnJSVFg3b1NNZTVxSktqa2xyakFwa08KaFFmdUhLVjMzZnlMaXF2SzB5dnNsS2pETzQ3dlFIWFZkQWR0WkZQOXZ0eWluNHRBdkc2SVRTN05lcDY2UEZOWgpWMElwK20wQm0wdVBLTHVUMC81VEt5MHlSUGhEd2lQL1BKbnRNRnFBVlRubUUwWlJqcUUzK2l2VjdaQjNiY0NwCjlmT09TWmtWMXZCdXIrU0xJbUpFRTBaczBqeFdtelpYSmxCTQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://77E4F9C82F02ADF5802F48EC25844915.gr7.ap-northeast-1.eks.amazonaws.com
  name: user02-eks.ap-northeast-1.eksctl.io
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREEwTXpFMU9Gb1hEVE15TURZeE56QTBNekUxT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHNECkhWUHNhMUVuUGhNdjR3NkZXa01KR2oyd1V0UHNGWmxKRGhGK3ZBNkwvS293OUJEVW5KTG5IdXFrWXl1ZlBtSDIKNSs0aTNQZVUzeWIzckFCTGdZRlNpU2k2VERCbVFXejVxbGNOeUxlYU5CWExvNFlFdFNNWTBhcFlYMVF4RFBlKwprM2l5VXdjMkpNa0xEVTM2clpFR3pyYi8zZFZ3c05BUmJHUjZmd3gxMEZpYXR3cVRnUVpmK2JOZ05NdWplR0p2CmJIRER2eHEzaFVSa3kvUjNlNUxPNDlWNTBLbzFPR21DSitDaVliY0tFY0tWanU2SmptYVhwNjU5VU83LzNMTmwKVDl2bTVlTHhLYkZkYTA1SWtzeno2TUZ1SFhmdTdCZm05Y3NzYzkrZFRJZlVrR05YVTFsV3pkMFVnbS9Vb0RTbgpHRGoyeXFwOERSY1RQMzI2bkFFQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZKT0VRbFpERWVYN2Nnc1BXOG9meEdQcUdodjZNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCQ01vTWtKazQxV1l6elU2OEg3aml6SFByWkpaYTg2UGJ0T203YXlwNllrbnJjeVMvTQpPaStQLyt4NjM2N3dHYTc0bjFsSkFTRHpFS3dFV013U2NKRmxKUU5qWExoRW5obUhWa3FLRXZ4SUNEa3YyZVA2CmdRZ1p4OFcwT3QyeWxnR1lvdU1yb09zL1RlSXJDR3dtcmVZR2pEUHh3RnJSVFg3b1NNZTVxSktqa2xyakFwa08KaFFmdUhLVjMzZnlMaXF2SzB5dnNsS2pETzQ3dlFIWFZkQWR0WkZQOXZ0eWluNHRBdkc2SVRTN05lcDY2UEZOWgpWMElwK20wQm0wdVBLTHVUMC81VEt5MHlSUGhEd2lQL1BKbnRNRnFBVlRubUUwWlJqcUUzK2l2VjdaQjNiY0NwCjlmT09TWmtWMXZCdXIrU0xJbUpFRTBaczBqeFdtelpYSmxCTQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://77E4F9C82F02ADF5802F48EC25844915.gr7.ap-northeast-1.eks.amazonaws.com
  name: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
contexts:
- context:
    cluster: kcb-test2.k8s.local
    namespace: labs--311032102
    user: labs--311032102
  name: kcb-test2.k8s.local
- context:
    cluster: user02-eks.ap-northeast-1.eksctl.io
    user: user02@user02-eks.ap-northeast-1.eksctl.io
  name: user02@user02-eks.ap-northeast-1.eksctl.io
- context:
    cluster: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
    user: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
  name: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
current-context: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
kind: Config
preferences: {}
users:
- name: labs--311032102
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6InFQaE1menpURGlISnprRm44Tmt6UGRNeEVBS3ZoMHQ0MGRrR04zSmZwUjQifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJsYWJzLS0zMTEwMzIxMDIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoibGFicy0tMzExMDMyMTAyLXRva2VuLXg3NXFzIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImxhYnMtLTMxMTAzMjEwMiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImFkYjRkMjUzLTQyMGItNGNhOS1iNjM0LWMzODc2ODUwZjk3YyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpsYWJzLS0zMTEwMzIxMDI6bGFicy0tMzExMDMyMTAyIn0.emrq_HwF-jxjPJuICYl_7mxbuR5-Re8HErPNZriqPHLj9U5ZQnPD27y5WCjx7IrAirvWvBZg-rCfn0TbOhB31V8Iahug0QftMEKcXBSayB8nQk_cXrWdkRic0k0_sU3JfyLQ4OSDyqfDhuPJOua5rtbMYvwLgFA-PeasZU4Hsxjztc0f1ier_ecR4C_ZBtcl_t1ojh-eVqrChIv6Wje9z3M-juhnMVV75fP4JHKUk_8ZxMXrDOUY6OY5fImLEO1MyZeGNE4IW817D_GPL00LhNs4Wr-LZm-ZNm4bsKtAmziir_SqS02w8E3KPZagIrHCT-u9_ErlFyXul2-8bP5leg
- name: user02@user02-eks.ap-northeast-1.eksctl.io
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1alpha1
      args:
      - eks
      - get-token
      - --cluster-name
      - user02-eks
      - --region
      - ap-northeast-1
      command: aws
      env:
      - name: AWS_STS_REGIONAL_ENDPOINTS
        value: regional
      provideClusterInfo: false
- name: arn:aws:eks:ap-northeast-1:979050235289:cluster/user02-eks
  user:
    exec:
      apiVersion: client.authentication.k8s.io/v1beta1
      args:
      - --region
      - ap-northeast-1
      - eks
      - get-token
      - --cluster-name
      - user02-eks
      command: aws


### ECR (클러스터 스토리지)
https://uengine2.signin.aws.amazon.com/console

uengine2
user02/hana!@12

리전선택 : ap-northeast-1
계정클릭
ID: 9790-5023-5289
IAM 사용자: user02

1. ECR 스토리지 생성 :user02_ecr  
   : 싸이트접속해서... (Elastic Container Registry)


## 매우주의
Elastic Container Registry 클릭 --> 리포지토리생성 (user02_ecr)

==> user02-order 로 생성해야함 ( _ 는 적용되지 않음)


#
사용자 이름
user02 (에 생성됨)
사용자 ARN
arn:aws:iam::979050235289:user/user02 
AWS 계정 ID
979050235289 
계정 정규 사용자 ID 
65d222c82d1bc1e19fc27fae6fa5ba22300911f12e6507fddf2bfa93670b2611 


##
aws --region ap-northeast-1 ecr get-login-password 

root@labs--311032102:/home/project/monolith2misvc# aws --region ap-northeast-1 ecr get-login-password 
eyJwYXlsb2FkIjoiMk9BWjRZZldJaTBZZDBDVUU0NG1jbkFKcW9UTXhUUzBHdStnNFRvc25reEZFY1ZvR3RRYWVnMVUwSUkrcGxvcXJmUWZtTmlNQjlUMjdUckJIc3lJN3V0d21pWVBvUS9ybmlnK2o4VE5TdWU3TndKN2xTS0dzQzdDSkJPWkxhYkErOTRSLzQ3UUIvdnBIbEZyeWdhOTlZdTV0bHlPUlBwTFo0MmxGem9jYW9ESWxtVjlGVnFxTTgwNHZaZmR0MlE2UFpnRjFPVmtKZ3d2b05HckY1cklaN3ErcEJEMjZEcHdXN3ozQ1d6ZW4rdzN5UEN0TlpPSWNjdFprY3ZtUVZ3WERZWWRTanpnT1ZNaEgrbU9lb1JLdjlVN1V3K2FEN0o1OXc2NHdMQVRRWCtkUDB0YUZpZGwwVmtMZTdXMjZGNmM3VW14WS9GVUIzeXhHVFB3dlVFU0NjTGl0MzQrekdob3NoaVhGNXF6Y3UxWWYrOExEak1ROE1LUDVVelAzcUMyYjUzcEp3cXZTcks1QUNobUhGQTlwUWZQUE9nbXJiRGh4R0hTNStoVWxmc294WTBjUW10TU92RGZOZnMwZ3dzSzhYTE02N2tFaW05bkZjbHNIeUc0QjJiM0lFcXVxSnc1YU1Sa3V1NXpacXM0OEs0MlczQ3B2WXI1MjdiTExDWE1rYzFaLzZyNWJkcmJqeDNUYWhkcHNrcW9WQ0xoUWpTb3RSQnF0ZmFkVXdPbnRpdjJVUTU0SGZjc2ZhNE50ZmQzSGlxc0lPdHpvOVdLNGpNcS8zRDk0dFNVUTRxcHNQUytTM3RkM2dOcHBFL2xOTVRoSzMxeUdUdW01c1FlNlF6c21GRndVanBYeWdTdzV0U2szM2FadWU0WFF1amc0SG40UFpPYnJ2SEF1QjVieXBMRVlRQnNmakhoRkpmNDFmTjZrZnhUTEFRbDBrKzR2QmRVMzU3OTZlK2JFbVRMZkV4SGZPSkI5MHVaVTBIclB2RWNZSHUrZzQ3T0NleEdoVmt5My94MFJ0bkJYbVJXc3RRRGRMRFMzL1lmU1JDUE5CMVdwMGowK3VkN3k2WFlndVowRGpkODQwSUdBb2ZXTStPWWd6bnZTR0k4VW5YcXloVHF2aXZtOUJEVElPWWxpUXdVdDNBNGErVUZ6bDBzc1N4NHh1ODRQaUlWaE52L0RJTW55Y3hMb1ZCbERuZGN1dnBHWmo1dm9ydzFUYS81UzlVNDdnbGhHaTFWMkVERVFhY2paMWVTTFc1NWVDOTBuWGxWKzI1MlZNQlVmWG11ZlV6NXNpL1lvWWRXbVBsM3VnV2R4M0cxYjdmVE5kQmUxSWVaWnY0UVU2TlBjMmlxZGgxcGhKNGF2WUoyVk16T3AvQmd5N1ZpZDRUYTMwajFqRjQyOHRTazY3ST0iLCJkYXRha2V5IjoiQVFFQkFIZ0FNZktEbElvcEM2enMwYk1kUnJZU0hhL0MzOWtDcmNQOGtWcHJFOWYra1FBQUFINHdmQVlKS29aSWh2Y05BUWNHb0c4d2JRSUJBREJvQmdrcWhraUc5dzBCQndFd0hnWUpZSVpJQVdVREJBRXVNQkVFREloVVFIZXFjOHFwc1c1SFdnSUJFSUE3VmNMNjV6Zjl2TU05S1Z3bm5sbnpjWTRiQVMrYS9rdlozUFNqUHRoN3NmUE55K1V4R1QyeXdPOGVOTFJZMk5Tc2hhMzJSTVlzZjh6WWhwVT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2NTU3NDUwNDV9

## https://jwt.io/ 접속후 넣으면 아래 "expiration" 안에 사용해야함.

{
  "payload": "2OAZ4YfWIi0Yd0CUE44mcnAJqoTMxTS0Gu+g4TosnkxFEcVoGtQaeg1U0II+ploqrfQfmNiMB9T27TrBHsyI7utwmiYPoQ/rnig+j8TNSue7NwJ7lSKGsC7CJBOZLabA+94R/47QB/vpHlFryga99Yu5tlyORPpLZ42lFzocaoDIlmV9FVqqM804vZfdt2Q6PZgF1OVkJgwvoNGrF5rIZ7q+pBD26DpwW7z3CWzen+w3yPCtNZOIcctZkcvmQVwXDYYdSjzgOVMhH+mOeoRKv9U7Uw+aD7J59w64wLATQX+dP0taFidl0VkLe7W26F6c7UmxY/FUB3yxGTPwvUESCcLit34+zGhoshiXF5qzcu1Yf+8LDjMQ8MKP5UzP3qC2b53pJwqvSrK5AChmHFA9pQfPPOgmrbDhxGHS5+hUlfsoxY0cQmtMOvDfNfs0gwsK8XLM67kEim9nFclsHyG4B2b3IEquqJw5aMRkuu5zZqs48K42W3CpvYr527bLLCXMkc1Z/6r5bdrbjx3TahdpskqoVCLhQjSotRBqtfadUwOntiv2UQ54Hfcsfa4Ntfd3HiqsIOtzo9WK4jMq/3D94tSUQ4qpsPS+S3td3gNppE/lNMThK31yGTum5sQe6QzsmFFwUjpXygSw5tSk33aZue4XQujg4Hn4PZObrvHAuB5bypLEYQBsfjHhFJf41fN6kfxTLAQl0k+4vBdU35796e+bEmTLfExHfOJB90uZU0HrPvEcYHu+g47OCexGhVky3/x0RtnBXmRWstQDdLDS3/YfSRCPNB1Wp0j0+ud7y6XYguZ0Djd840IGAofWM+OYgznvSGI8UnXqyhTqvivm9BDTIOYliQwUt3A4a+UFzl0ssSx4xu84PiIVhNv/DIMnycxLoVBlDndcuvpGZj5vorw1Ta/5S9U47glhGi1V2EDEQacjZ1eSLW55eC90nXlV+252VMBUfXmufUz5si/YoYdWmPl3ugWdx3G1b7fTNdBe1IeZZv4QU6NPc2iqdh1phJ4avYJ2VMzOp/Bgy7Vid4Ta30j1jF428tSk67I=",
  "datakey": "AQEBAHgAMfKDlIopC6zs0bMdRrYSHa/C39kCrcP8kVprE9f+kQAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDIhUQHeqc8qpsW5HWgIBEIA7VcL65zf9vMM9KVwnnlnzcY4bAS+a/kvZ3PSjPth7sfPNy+UxGT2ywO8eNLRY2NSsha32RMYsf8zYhpU=",
  "version": "2",
  "type": "DATA_KEY",
  "expiration": 1655745045
}

docker login --username AWS -p 아주긴도커패스워드 [AWS유저아이디-숫자로만된].dkr.ecr.[리전명].amazonaws.com
docker login --username AWS -p eyJwYXlsb2FkIjoiMk9BWjRZZldJaTBZZDBDVUU0NG1jbkFKcW9UTXhUUzBHdStnNFRvc25reEZFY1ZvR3RRYWVnMVUwSUkrcGxvcXJmUWZtTmlNQjlUMjdUckJIc3lJN3V0d21pWVBvUS9ybmlnK2o4VE5TdWU3TndKN2xTS0dzQzdDSkJPWkxhYkErOTRSLzQ3UUIvdnBIbEZyeWdhOTlZdTV0bHlPUlBwTFo0MmxGem9jYW9ESWxtVjlGVnFxTTgwNHZaZmR0MlE2UFpnRjFPVmtKZ3d2b05HckY1cklaN3ErcEJEMjZEcHdXN3ozQ1d6ZW4rdzN5UEN0TlpPSWNjdFprY3ZtUVZ3WERZWWRTanpnT1ZNaEgrbU9lb1JLdjlVN1V3K2FEN0o1OXc2NHdMQVRRWCtkUDB0YUZpZGwwVmtMZTdXMjZGNmM3VW14WS9GVUIzeXhHVFB3dlVFU0NjTGl0MzQrekdob3NoaVhGNXF6Y3UxWWYrOExEak1ROE1LUDVVelAzcUMyYjUzcEp3cXZTcks1QUNobUhGQTlwUWZQUE9nbXJiRGh4R0hTNStoVWxmc294WTBjUW10TU92RGZOZnMwZ3dzSzhYTE02N2tFaW05bkZjbHNIeUc0QjJiM0lFcXVxSnc1YU1Sa3V1NXpacXM0OEs0MlczQ3B2WXI1MjdiTExDWE1rYzFaLzZyNWJkcmJqeDNUYWhkcHNrcW9WQ0xoUWpTb3RSQnF0ZmFkVXdPbnRpdjJVUTU0SGZjc2ZhNE50ZmQzSGlxc0lPdHpvOVdLNGpNcS8zRDk0dFNVUTRxcHNQUytTM3RkM2dOcHBFL2xOTVRoSzMxeUdUdW01c1FlNlF6c21GRndVanBYeWdTdzV0U2szM2FadWU0WFF1amc0SG40UFpPYnJ2SEF1QjVieXBMRVlRQnNmakhoRkpmNDFmTjZrZnhUTEFRbDBrKzR2QmRVMzU3OTZlK2JFbVRMZkV4SGZPSkI5MHVaVTBIclB2RWNZSHUrZzQ3T0NleEdoVmt5My94MFJ0bkJYbVJXc3RRRGRMRFMzL1lmU1JDUE5CMVdwMGowK3VkN3k2WFlndVowRGpkODQwSUdBb2ZXTStPWWd6bnZTR0k4VW5YcXloVHF2aXZtOUJEVElPWWxpUXdVdDNBNGErVUZ6bDBzc1N4NHh1ODRQaUlWaE52L0RJTW55Y3hMb1ZCbERuZGN1dnBHWmo1dm9ydzFUYS81UzlVNDdnbGhHaTFWMkVERVFhY2paMWVTTFc1NWVDOTBuWGxWKzI1MlZNQlVmWG11ZlV6NXNpL1lvWWRXbVBsM3VnV2R4M0cxYjdmVE5kQmUxSWVaWnY0UVU2TlBjMmlxZGgxcGhKNGF2WUoyVk16T3AvQmd5N1ZpZDRUYTMwajFqRjQyOHRTazY3ST0iLCJkYXRha2V5IjoiQVFFQkFIZ0FNZktEbElvcEM2enMwYk1kUnJZU0hhL0MzOWtDcmNQOGtWcHJFOWYra1FBQUFINHdmQVlKS29aSWh2Y05BUWNHb0c4d2JRSUJBREJvQmdrcWhraUc5dzBCQndFd0hnWUpZSVpJQVdVREJBRXVNQkVFREloVVFIZXFjOHFwc1c1SFdnSUJFSUE3VmNMNjV6Zjl2TU05S1Z3bm5sbnpjWTRiQVMrYS9rdlozUFNqUHRoN3NmUE55K1V4R1QyeXdPOGVOTFJZMk5Tc2hhMzJSTVlzZjh6WWhwVT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2NTU3NDUwNDV9 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com

root@labs--311032102:/home/project/monolith2misvc# docker login --username AWS -p eyJwYXlsb2FkIjoiMk9BWjRZZldJaTBZZDBDVUU0NG1jbkFKcW9UTXhUUzBHdStnNFRvc25reEZFY1ZvR3RRYWVnMVUwSUkrcGxvcXJmUWZtTmlNQjlUMjdUckJIc3lJN3V0d21pWVBvUS9ybmlnK2o4VE5TdWU3TndKN2xTS0dzQzdDSkJPWkxhYkErOTRSLzQ3UUIvdnBIbEZyeWdhOTlZdTV0bHlPUlBwTFo0MmxGem9jYW9ESWxtVjlGVnFxTTgwNHZaZmR0MlE2UFpnRjFPVmtKZ3d2b05HckY1cklaN3ErcEJEMjZEcHdXN3ozQ1d6ZW4rdzN5UEN0TlpPSWNjdFprY3ZtUVZ3WERZWWRTanpnT1ZNaEgrbU9lb1JLdjlVN1V3K2FEN0o1OXc2NHdMQVRRWCtkUDB0YUZpZGwwVmtMZTdXMjZGNmM3VW14WS9GVUIzeXhHVFB3dlVFU0NjTGl0MzQrekdob3NoaVhGNXF6Y3UxWWYrOExEak1ROE1LUDVVelAzcUMyYjUzcEp3cXZTcks1QUNobUhGQTlwUWZQUE9nbXJiRGh4R0hTNStoVWxmc294WTBjUW10TU92RGZOZnMwZ3dzSzhYTE02N2tFaW05bkZjbHNIeUc0QjJiM0lFcXVxSnc1YU1Sa3V1NXpacXM0OEs0MlczQ3B2WXI1MjdiTExDWE1rYzFaLzZyNWJkcmJqeDNUYWhkcHNrcW9WQ0xoUWpTb3RSQnF0ZmFkVXdPbnRpdjJVUTU0SGZjc2ZhNE50ZmQzSGlxc0lPdHpvOVdLNGpNcS8zRDk0dFNVUTRxcHNQUytTM3RkM2dOcHBFL2xOTVRoSzMxeUdUdW01c1FlNlF6c21GRndVanBYeWdTdzV0U2szM2FadWU0WFF1amc0SG40UFpPYnJ2SEF1QjVieXBMRVlRQnNmakhoRkpmNDFmTjZrZnhUTEFRbDBrKzR2QmRVMzU3OTZlK2JFbVRMZkV4SGZPSkI5MHVaVTBIclB2RWNZSHUrZzQ3T0NleEdoVmt5My94MFJ0bkJYbVJXc3RRRGRMRFMzL1lmU1JDUE5CMVdwMGowK3VkN3k2WFlndVowRGpkODQwSUdBb2ZXTStPWWd6bnZTR0k4VW5YcXloVHF2aXZtOUJEVElPWWxpUXdVdDNBNGErVUZ6bDBzc1N4NHh1ODRQaUlWaE52L0RJTW55Y3hMb1ZCbERuZGN1dnBHWmo1dm9ydzFUYS81UzlVNDdnbGhHaTFWMkVERVFhY2paMWVTTFc1NWVDOTBuWGxWKzI1MlZNQlVmWG11ZlV6NXNpL1lvWWRXbVBsM3VnV2R4M0cxYjdmVE5kQmUxSWVaWnY0UVU2TlBjMmlxZGgxcGhKNGF2WUoyVk16T3AvQmd5N1ZpZDRUYTMwajFqRjQyOHRTazY3ST0iLCJkYXRha2V5IjoiQVFFQkFIZ0FNZktEbElvcEM2enMwYk1kUnJZU0hhL0MzOWtDcmNQOGtWcHJFOWYra1FBQUFINHdmQVlKS29aSWh2Y05BUWNHb0c4d2JRSUJBREJvQmdrcWhraUc5dzBCQndFd0hnWUpZSVpJQVdVREJBRXVNQkVFREloVVFIZXFjOHFwc1c1SFdnSUJFSUE3VmNMNjV6Zjl2TU05S1Z3bm5sbnpjWTRiQVMrYS9rdlozUFNqUHRoN3NmUE55K1V4R1QyeXdPOGVOTFJZMk5Tc2hhMzJSTVlzZjh6WWhwVT0iLCJ2ZXJzaW9uIjoiMiIsInR5cGUiOiJEQVRBX0tFWSIsImV4cGlyYXRpb24iOjE2NTU3NDUwNDV9 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com
Login Succeeded

============> docker --> ecr 로 이동함.

## 
cd /home/project 에서 
실행 git clone https://github.com/event-storming/monolith 
cd monolith
mvn package -B




docker build -t [AWS유저아이디-숫자로만된].dkr.ecr.ap-northeast-2.amazonaws.com/order:v1 .

docker build -t 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1 .

-- 다시 
docker build -t 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02-order:v1 .

oot@labs--311032102:/home/project/monolith# ls -lrt
total 52
-rw-r--r-- 1 root root  215 Jun 20 05:25 Dockerfile
-rw-r--r-- 1 root root  320 Jun 20 05:25 Dockerfile-prod
-rw-r--r-- 1 root root  343 Jun 20 05:25 DockerfileAutoBuild
-rw-r--r-- 1 root root  633 Jun 20 05:25 README.md
drwxr-xr-x 2 root root 4096 Jun 20 05:25 azure
-rw-r--r-- 1 root root 2239 Jun 20 05:25 cloudbuild.yaml
drwxr-xr-x 2 root root 4096 Jun 20 05:25 kubernetes
-rw-r--r-- 1 root root 9260 Jun 20 05:25 monolith.iml
-rw-r--r-- 1 root root 2650 Jun 20 05:25 pom.xml
drwxr-xr-x 3 root root 4096 Jun 20 05:25 src
drwxr-xr-x 6 root root 4096 Jun 20 05:28 target
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# cd tartge^C
root@labs--311032102:/home/project/monolith# date
Mon Jun 20 05:30:01 UTC 2022
root@labs--311032102:/home/project/monolith# cd target
root@labs--311032102:/home/project/monolith/target# ls
classes  generated-sources  maven-archiver  maven-status  monolith-0.0.1.BUILD-SNAPSHOT.jar  monolith-0.0.1.BUILD-SNAPSHOT.jar.original
root@labs--311032102:/home/project/monolith/target# ls -lrt
total 40508
drwxr-xr-x 3 root root     4096 Jun 20 05:28 maven-status
drwxr-xr-x 3 root root     4096 Jun 20 05:28 generated-sources
drwxr-xr-x 4 root root     4096 Jun 20 05:28 classes
drwxr-xr-x 2 root root     4096 Jun 20 05:28 maven-archiver
-rw-r--r-- 1 root root   356342 Jun 20 05:28 monolith-0.0.1.BUILD-SNAPSHOT.jar.original
-rw-r--r-- 1 root root 41103784 Jun 20 05:28 monolith-0.0.1.BUILD-SNAPSHOT.jar
root@labs--311032102:/home/project/monolith/target# 
root@labs--311032102:/home/project/monolith/target# 
root@labs--311032102:/home/project/monolith/target# 
root@labs--311032102:/home/project/monolith/target# 
root@labs--311032102:/home/project/monolith/target# cd ..
root@labs--311032102:/home/project/monolith# ls
Dockerfile  Dockerfile-prod  DockerfileAutoBuild  README.md  azure  cloudbuild.yaml  kubernetes  monolith.iml  pom.xml  src  target
root@labs--311032102:/home/project/monolith# docker build -t 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1 .
Sending build context to Docker daemon 42.77 MB
Step 1/4 : FROM ghcr.io/gkedu/openjdk:8u212-jdk-alpine
8u212-jdk-alpine: Pulling from gkedu/openjdk
Digest: sha256:44b3cea369c947527e266275cee85c71a81f20fc5076f6ebb5a13f19015dce71
Status: Downloaded newer image for ghcr.io/gkedu/openjdk:8u212-jdk-alpine
 ---> a3562aa0b991
Step 2/4 : COPY target/*SNAPSHOT.jar app.jar
 ---> 6369d0f7b8bc
Step 3/4 : EXPOSE 8080
 ---> Running in 823269eb2dbf
Removing intermediate container 823269eb2dbf
 ---> f3ab877945ff
Step 4/4 : ENTRYPOINT ["java","-Xmx400M","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar","--spring.profiles.active=docker"]
 ---> Running in 47dbc1b15da7
Removing intermediate container 47dbc1b15da7
 ---> 089f99198c1c
Successfully built 089f99198c1c
Successfully tagged 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1



docker build -t 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1 .

docker push 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1

-->
docker push 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02-order:v1

root@labs--311032102:/home/project/monolith# docker push 979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1
The push refers to repository [979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr]
39dc5e3d9b32: Pushed 
ceaf9e1ebef5: Pushed 
9b9b7f3d56a0: Pushed 
f1b5933fe4b5: Pushed 
v1: digest: sha256:933d853fce37adb7f48f19409f99fd02284ef9a73b9ce6fd62cd47a61589750c size: 1159

==> 이미지에서 user02_ecr 에서 v1 버전을 확인함 (아마존에 v1 이미지 올림)
==> 이미지에서 user02-order 에서 v1 버전을 확인함 (아마존에 v1 이미지 올림)


source <(kubectl completion bash)
complete -F __start_kubectl kubectl

root@labs--311032102:/home/project/monolith# source<(kubectl completion bash)
bash: source/dev/fd/63: No such file or directory
root@labs--311032102:/home/project/monolith# source <(kubectl completion bash)
root@labs--311032102:/home/project/monolith# complete -F __start_kubectl kubectl

## 설정파일 적용하기 
source ~/.bashrc

root@labs--311032102:/home/project/monolith# source<(kubectl completion bash)
bash: source/dev/fd/63: No such file or directory
root@labs--311032102:/home/project/monolith# source <(kubectl completion bash)
root@labs--311032102:/home/project/monolith# complete -F __start_kubectl kubectl
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   98m
root@labs--311032102:/home/project/monolith# 

## 
--979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1

-- 오류발생 (user02_ecr 안되서 싸이트에서 user02-order 로 생성하고 리빌드 다시해야함.)
kubectl create deploy order --image=979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02_ecr:v1
--
kubectl create deploy order --image=979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02-order:v1
kubectl create deploy user02-order --image=979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02-order:v1

v1ot@labs--311032102:/home/project/monolith# kubectl create deploy order --image=979050235289.dkr.ecr.ap-northeast-1.amazonaws.com/user02-order:v
deployment.apps/order created

deployment.apps/user02-order created
root@labs--311032102:/home/project/monolith# kubectl get all^C
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                READY   STATUS    RESTARTS   AGE
pod/order-6d7c686964-s5vfm          1/1     Running   0          82s
pod/user02-order-5fd6ff986d-4q9q6   1/1     Running   0          10s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   108m

NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/order          1/1     1            1           82s
deployment.apps/user02-order   1/1     1            1           10s

NAME                                      DESIRED   CURRENT   READY   AGE
replicaset.apps/order-6d7c686964          1         1         1       82s
replicaset.apps/user02-order-5fd6ff986d   1         1         1       10s
root@labs--311032102:/home/project/monolith# kubectlget po
bash: kubectlget: command not found
root@labs--311032102:/home/project/monolith# kubectl get po
NAME                            READY   STATUS    RESTARTS   AGE
order-6d7c686964-s5vfm          1/1     Running   0          112s
user02-order-5fd6ff986d-4q9q6   1/1     Running   0          40s

root@labs--311032102:/home/project/monolith# kubectl get po
NAME                            READY   STATUS    RESTARTS   AGE
order-6d7c686964-s5vfm          1/1     Running   0          4m1s
user02-order-5fd6ff986d-4q9q6   1/1     Running   0          2m49s
root@labs--311032102:/home/project/monolith# kubectl get pod
NAME                            READY   STATUS    RESTARTS   AGE
order-6d7c686964-s5vfm          1/1     Running   0          4m5s
user02-order-5fd6ff986d-4q9q6   1/1     Running   0          2m53s
root@labs--311032102:/home/project/monolith# kubectl get pod -o wide
NAME                            READY   STATUS    RESTARTS   AGE     IP               NODE                                               NOMINATED NODE   READINESS GATES
order-6d7c686964-s5vfm          1/1     Running   0          4m15s   192.168.9.201    ip-192-168-29-79.ap-northeast-1.compute.internal   <none>           <none>
user02-order-5fd6ff986d-4q9q6   1/1     Running   0          3m3s    192.168.75.188   ip-192-168-91-26.ap-northeast-1.compute.internal   <none>           <none>
root@labs--311032102:/home/project/monolith#

## 로그를 확인한다.
kubectl logs -f user02-order-5fd6ff986d-4q9q6

## 가상환경에 접속해서 확인한다.
root@labs--311032102:/home/project/monolith# kubectl exec -it user02-order-5fd6ff986d-4q9q6 -- /bin/sh

root@labs--311032102:/home/project/monolith# kubectl exec -it user02-order-5fd6ff986d-4q9q6 -- /bin/sh
/ # ls
app.jar  dev      home     media    opt      root     sbin     sys      usr
bin      etc      lib      mnt      proc     run      srv      tmp      var
/ # ls -lrt
total 40152
drwxr-xr-x    1 root     root            19 May  9  2019 var
drwxr-xr-x    2 root     root             6 May  9  2019 srv
drwxr-xr-x    2 root     root             6 May  9  2019 opt
drwxr-xr-x    2 root     root             6 May  9  2019 mnt
drwxr-xr-x    5 root     root            44 May  9  2019 media
drwxr-xr-x    2 root     root             6 May  9  2019 home
drwxr-xr-x    2 root     root          4096 May  9  2019 sbin
drwxr-xr-x    2 root     root          4096 May  9  2019 bin
drwxr-xr-x    1 root     root            81 May 11  2019 usr
drwxr-xr-x    1 root     root           132 May 11  2019 lib
-rw-r--r--    1 root     root      41103784 Jun 20 05:28 app.jar
dr-xr-xr-x   13 root     root             0 Jun 20 06:20 sys
drwxr-xr-x    1 root     root            21 Jun 20 06:20 run
dr-xr-xr-x  167 root     root             0 Jun 20 06:20 proc
drwxr-xr-x    1 root     root            66 Jun 20 06:20 etc
drwxr-xr-x    5 root     root           360 Jun 20 06:20 dev
drwxrwxrwt    1 root     root           114 Jun 20 06:21 tmp
drwx------    1 root     root            26 Jun 20 06:32 root
/ # tar -tvf all^C
/ # tar -tvf app.tar
tar: can't open 'app.tar': No such file or directory
/ # ^C
/ # ls
app.jar  dev      home     media    opt      root     sbin     sys      usr
bin      etc      lib      mnt      proc     run      srv      tmp      var
/ # ls^C
/ # tar -tvf app.jar
tar: invalid tar magic

exit

##
root@labs--311032102:/home/project/monolith# kubectl version --short
Client Version: v1.17.3
Server Version: v1.19.16-eks-de875a99

## kubectl Client  버전 맞추는 방법
kubectl client download 조회 
curl -LO https://dl.k8s.io/release/v1.19.0/bin/linux/amd64/kubectl

root@labs--311032102:/home/project/monolith# kubectl version --short
Client Version: v1.17.3
Server Version: v1.19.16-eks-de875a99
root@labs--311032102:/home/project/monolith# cd curl -LO https://dl.k8s.io/release/v1.19.0/bin/linux/amd64/kubectl
bash: cd: too many arguments
root@labs--311032102:/home/project/monolith#  curl -LO https://dl.k8s.io/release/v1.19.0/bin/linux/amd64/kubectl
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   154  100   154    0     0    865      0 --:--:-- --:--:-- --:--:--   865
100 41.0M  100 41.0M    0     0  59.0M      0 --:--:-- --:--:-- --:--:-- 59.0M
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# cd ..
root@labs--311032102:/home/project# ls
Dockerfile           Kafka-Scaling       advanced-connect  cna-pubsub2    default-env       dp-graphql  kafka-base      oauth2
Kafka-Manual-Commit  Keycloak-OAuth2-1   circuitbreaker    cna-start      dp-composite-svc  gateway     monolith        ops-deploy-my-app
Kafka-Retry-DLQ      Oauth2withKeycloak  cna-pubsub        contract-test  dp-cqrs           index.html  monolith2misvc  shopping
root@labs--311032102:/home/project# ls -la kubectl
ls: cannot access 'kubectl': No such file or directory
root@labs--311032102:/home/project# ^C
root@labs--311032102:/home/project# cd ..
root@labs--311032102:/home# cd project
root@labs--311032102:/home/project# ls
Dockerfile           Kafka-Scaling       advanced-connect  cna-pubsub2    default-env       dp-graphql  kafka-base      oauth2
Kafka-Manual-Commit  Keycloak-OAuth2-1   circuitbreaker    cna-start      dp-composite-svc  gateway     monolith        ops-deploy-my-app
Kafka-Retry-DLQ      Oauth2withKeycloak  cna-pubsub        contract-test  dp-cqrs           index.html  monolith2misvc  shopping
root@labs--311032102:/home/project# cd monolith
root@labs--311032102:/home/project/monolith# ls
Dockerfile  Dockerfile-prod  DockerfileAutoBuild  README.md  azure  cloudbuild.yaml  kubectl  kubernetes  monolith.iml  pom.xml  src  target
root@labs--311032102:/home/project/monolith# ls -lrt
total 42048
-rw-r--r-- 1 root root      215 Jun 20 05:25 Dockerfile
-rw-r--r-- 1 root root      320 Jun 20 05:25 Dockerfile-prod
-rw-r--r-- 1 root root      343 Jun 20 05:25 DockerfileAutoBuild
-rw-r--r-- 1 root root      633 Jun 20 05:25 README.md
drwxr-xr-x 2 root root     4096 Jun 20 05:25 azure
-rw-r--r-- 1 root root     2239 Jun 20 05:25 cloudbuild.yaml
drwxr-xr-x 2 root root     4096 Jun 20 05:25 kubernetes
-rw-r--r-- 1 root root     9260 Jun 20 05:25 monolith.iml
-rw-r--r-- 1 root root     2650 Jun 20 05:25 pom.xml
drwxr-xr-x 3 root root     4096 Jun 20 05:25 src
drwxr-xr-x 7 root root     4096 Jun 20 05:48 target
-rw-r--r-- 1 root root 43003904 Jun 20 06:45 kubectl
root@labs--311032102:/home/project/monolith# cp kubectl ^C
root@labs--311032102:/home/project/monolith# which kubectl
/usr/bin/kubectl
root@labs--311032102:/home/project/monolith# cp ./curl -LO https://dl.k8s.io/release/v1.19.0/bin/linux/amd64/kubectl^C
root@labs--311032102:/home/project/monolith# co ./kubectl /usr/bin/kubectl
bash: co: command not found
root@labs--311032102:/home/project/monolith# cp ./kubectl /usr/bin/kubectl
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# kubectl version --short
Client Version: v1.19.0
Server Version: v1.19.16-eks-de875a99

#
root@labs--311032102:/home/project/monolith# kubectl -h
kubectl controls the Kubernetes cluster manager.

 Find more information at: https://kubernetes.io/docs/reference/kubectl/overview/

Basic Commands (Beginner):
  create        Create a resource from a file or from stdin.
  expose        Take a replication controller, service, deployment or pod and expose it as a new Kubernetes Service
  run           Run a particular image on the cluster
  set           Set specific features on objects

Basic Commands (Intermediate):
  explain       Documentation of resources
  get           Display one or many resources
  edit          Edit a resource on the server
  delete        Delete resources by filenames, stdin, resources and names, or by resources and label selector

Deploy Commands:
  rollout       Manage the rollout of a resource
  scale         Set a new size for a Deployment, ReplicaSet or Replication Controller
  autoscale     Auto-scale a Deployment, ReplicaSet, or ReplicationController

Cluster Management Commands:
  certificate   Modify certificate resources.
  cluster-info  Display cluster info
  top           Display Resource (CPU/Memory/Storage) usage.
  cordon        Mark node as unschedulable
  uncordon      Mark node as schedulable
  drain         Drain node in preparation for maintenance
  taint         Update the taints on one or more nodes

Troubleshooting and Debugging Commands:
  describe      Show details of a specific resource or group of resources
  logs          Print the logs for a container in a pod
  attach        Attach to a running container
  exec          Execute a command in a container
  port-forward  Forward one or more local ports to a pod
  proxy         Run a proxy to the Kubernetes API server
  cp            Copy files and directories to and from containers.
  auth          Inspect authorization

Advanced Commands:
  diff          Diff live version against would-be applied version
  apply         Apply a configuration to a resource by filename or stdin
  patch         Update field(s) of a resource using strategic merge patch
  replace       Replace a resource by filename or stdin
  wait          Experimental: Wait for a specific condition on one or many resources.
  convert       Convert config files between different API versions
  kustomize     Build a kustomization target from a directory or a remote url.

Settings Commands:
  label         Update the labels on a resource
  annotate      Update the annotations on a resource
  completion    Output shell completion code for the specified shell (bash or zsh)

Other Commands:
  alpha         Commands for features in alpha
  api-resources Print the supported API resources on the server
  api-versions  Print the supported API versions on the server, in the form of "group/version"
  config        Modify kubeconfig files
  plugin        Provides utilities for interacting with plugins.
  version       Print the client and server version information

Usage:
  kubectl [flags] [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).

root@labs--311032102:/home/project/monolith# kubectl create -h
Create a resource from a file or from stdin.

 JSON and YAML formats are accepted.

Examples:
  # Create a pod using the data in pod.json.
  kubectl create -f ./pod.json
  
  # Create a pod based on the JSON passed into stdin.
  cat pod.json | kubectl create -f -
  
  # Edit the data in docker-registry.yaml in JSON then create the resource using the edited data.
  kubectl create -f docker-registry.yaml --edit -o json

Available Commands:
  clusterrole         Create a ClusterRole.
  clusterrolebinding  Create a ClusterRoleBinding for a particular ClusterRole
  configmap           Create a configmap from a local file, directory or literal value
  cronjob             Create a cronjob with the specified name.
  deployment          Create a deployment with the specified name.
  job                 Create a job with the specified name.
  namespace           Create a namespace with the specified name
  poddisruptionbudget Create a pod disruption budget with the specified name.
  priorityclass       Create a priorityclass with the specified name.
  quota               Create a quota with the specified name.
  role                Create a role with single rule.
  rolebinding         Create a RoleBinding for a particular Role or ClusterRole
  secret              Create a secret using specified subcommand
  service             Create a service using specified subcommand.
  serviceaccount      Create a service account with the specified name

Options:
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --dry-run='none': Must be "none", "server", or "client". If client strategy, only print the object that would be
sent, without sending it. If server strategy, submit server-side request without persisting the resource.
      --edit=false: Edit the API resource before creating
      --field-manager='kubectl-create': Name of the manager used to track field ownership.
  -f, --filename=[]: Filename, directory, or URL to files to use to create the resource
  -k, --kustomize='': Process the kustomization directory. This flag can't be used together with -f or -R.
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
      --raw='': Raw URI to POST to the server.  Uses the transport specified by the kubeconfig file.
      --record=false: Record current kubectl command in the resource annotation. If set to false, do not record the
command. If set to true, record the command. If not set, default to updating the existing annotation value only if one
already exists.
  -R, --recursive=false: Process the directory used in -f, --filename recursively. Useful when you want to manage
related manifests organized within the same directory.
      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the
annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.
  -l, --selector='': Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2)
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --validate=true: If true, use a schema to validate the input before sending it
      --windows-line-endings=false: Only relevant if --edit=true. Defaults to the line ending native to your platform.

Usage:
  kubectl create -f FILENAME [options]

Use "kubectl <command> --help" for more information about a given command.
Use "kubectl options" for a list of global command-line options (applies to all commands).

root@labs--311032102:/home/project/monolith# kubectl create deployment -h
Create a deployment with the specified name.

Aliases:
deployment, deploy

Examples:
  # Create a deployment named my-dep that runs the busybox image.
  kubectl create deployment my-dep --image=busybox
  
  # Create a deployment with command
  kubectl create deployment my-dep --image=busybox -- date
  
  # Create a deployment named my-dep that runs the nginx image with 3 replicas.
  kubectl create deployment my-dep --image=nginx --replicas=3
  
  # Create a deployment named my-dep that runs the busybox image and expose port 5701.
  kubectl create deployment my-dep --image=busybox --port=5701

Options:
      --allow-missing-template-keys=true: If true, ignore any errors in templates when a field or map key is missing in
the template. Only applies to golang and jsonpath output formats.
      --dry-run='none': Must be "none", "server", or "client". If client strategy, only print the object that would be
sent, without sending it. If server strategy, submit server-side request without persisting the resource.
      --field-manager='kubectl-create': Name of the manager used to track field ownership.
      --image=[]: Image names to run.
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
      --port=-1: The port that this container exposes.
  -r, --replicas=1: Number of replicas to create. Default is 1.
      --save-config=false: If true, the configuration of current object will be saved in its annotation. Otherwise, the
annotation will be unchanged. This flag is useful when you want to perform kubectl apply on this object in the future.
      --template='': Template string or path to template file to use when -o=go-template, -o=go-template-file. The
template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
      --validate=true: If true, use a schema to validate the input before sending it

Usage:
  kubectl create deployment NAME --image=image -- [COMMAND] [args...] [options]

Use "kubectl options" for a list of global command-line options (applies to all commands).

##
root@labs--311032102:/home/project/monolith# kubectl create deployment nginx-gorapa --image=nginx
  : 마아존 등록된 싸이트에서 다운,  버전은 latest 

root@labs--311032102:/home/project/monolith# watch kubectl get all

root@labs--311032102:/home/project/monolith# kubectl create deployment nginx-gorapa-2 --image=nginx --replicas 3
deployment.apps/nginx-gorapa-2 created
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS              RESTARTS   AGE
pod/nginx-gorapa-2-8559b5bc76-lqh7x   1/1     Running             0          8s
pod/nginx-gorapa-2-8559b5bc76-mz5hn   0/1     ContainerCreating   0          8s
pod/nginx-gorapa-2-8559b5bc76-sbwq9   0/1     ContainerCreating   0          8s
pod/nginx-gorapa-7878965fcc-x2lmj     1/1     Running             0          2m51s
pod/order-6d7c686964-s5vfm            1/1     Running             0          44m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running             0          43m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   151m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-gorapa     1/1     1            1           2m52s
deployment.apps/nginx-gorapa-2   1/3     3            1           8s
deployment.apps/order            1/1     1            1           44m
deployment.apps/user02-order     1/1     1            1           43m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         1       8s
replicaset.apps/nginx-gorapa-7878965fcc     1         1         1       2m52s
replicaset.apps/order-6d7c686964            1         1         1       44m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       43m



root@labs--311032102:/home/project/monolith# kubectl delete pod  nginx-gorapa-2-8559b5bc76-lqh7x
pod "nginx-gorapa-2-8559b5bc76-lqh7x" deleted
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          6s
pod/nginx-gorapa-2-8559b5bc76-mz5hn   1/1     Running   0          2m54s
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          2m54s
pod/nginx-gorapa-7878965fcc-x2lmj     1/1     Running   0          5m37s
pod/order-6d7c686964-s5vfm            1/1     Running   0          47m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          46m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   154m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-gorapa     1/1     1            1           5m38s
deployment.apps/nginx-gorapa-2   3/3     3            3           2m54s
deployment.apps/order            1/1     1            1           47m
deployment.apps/user02-order     1/1     1            1           46m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       2m54s
replicaset.apps/nginx-gorapa-7878965fcc     1         1         1       5m38s
replicaset.apps/order-6d7c686964            1         1         1       47m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       46m
root@labs--311032102:/home/project/monolith# kubectl delete pod  nginx-gorapa-2-8559b5bc76-lqh7x
Error from server (NotFound): pods "nginx-gorapa-2-8559b5bc76-lqh7x" not found
root@labs--311032102:/home/project/monolith# kubectl delete pod  nginx-gorapa-2-8559b5bc76-mz5hn
pod "nginx-gorapa-2-8559b5bc76-mz5hn" deleted
^[[A^[[A
root@labs--311032102:/home/project/monolith# kubectl delete pod  nginx-gorapa-2-8559b5bc76-lqh7x
^[[A^[[AError from server (NotFound): pods "nginx-gorapa-2-8559b5bc76-lqh7x" not found
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          45s
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          19s
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          3m33s
pod/nginx-gorapa-7878965fcc-x2lmj     1/1     Running   0          6m16s
pod/order-6d7c686964-s5vfm            1/1     Running   0          47m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          46m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   155m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-gorapa     1/1     1            1           6m17s
deployment.apps/nginx-gorapa-2   3/3     3            3           3m33s
deployment.apps/order            1/1     1            1           47m
deployment.apps/user02-order     1/1     1            1           46m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       3m33s
replicaset.apps/nginx-gorapa-7878965fcc     1         1         1       6m17s
replicaset.apps/order-6d7c686964            1         1         1       47m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       46m
root@labs--311032102:/home/project/monolith# kubectl delete deployment.apps nginx-gorapa2
Error from server (NotFound): deployments.apps "nginx-gorapa2" not found
root@labs--311032102:/home/project/monolith# kubectl delete deployment.apps nginx-gorapa
deployment.apps "nginx-gorapa" deleted
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          99s
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          73s
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          4m27s
pod/order-6d7c686964-s5vfm            1/1     Running   0          48m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          47m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   156m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx-gorapa-2   3/3     3            3           4m28s
deployment.apps/order            1/1     1            1           48m
deployment.apps/user02-order     1/1     1            1           47m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       4m28s
replicaset.apps/order-6d7c686964            1         1         1       48m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       47m
root@labs--311032102:/home/project/monolith# kubectl get all

##

root@labs--311032102:/home/project/monolith# kubectl create deployment nginx --image=nginx --replicas=3 --dry-run=client -o yaml > nginxdep.yaml 
root@labs--311032102:/home/project/monolith# ls -lrt
total 42052
-rw-r--r-- 1 root root      215 Jun 20 05:25 Dockerfile
-rw-r--r-- 1 root root      320 Jun 20 05:25 Dockerfile-prod
-rw-r--r-- 1 root root      343 Jun 20 05:25 DockerfileAutoBuild
-rw-r--r-- 1 root root      633 Jun 20 05:25 README.md
drwxr-xr-x 2 root root     4096 Jun 20 05:25 azure
-rw-r--r-- 1 root root     2239 Jun 20 05:25 cloudbuild.yaml
drwxr-xr-x 2 root root     4096 Jun 20 05:25 kubernetes
-rw-r--r-- 1 root root     9260 Jun 20 05:25 monolith.iml
-rw-r--r-- 1 root root     2650 Jun 20 05:25 pom.xml
drwxr-xr-x 3 root root     4096 Jun 20 05:25 src
drwxr-xr-x 7 root root     4096 Jun 20 05:48 target
-rw-r--r-- 1 root root 43003904 Jun 20 06:45 kubectl
-rw-r--r-- 1 root root      384 Jun 20 07:10 nginxdep.yaml
root@labs--311032102:/home/project/monolith# vi n*.y*l
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# 
root@labs--311032102:/home/project/monolith# set -o vi
root@labs--311032102:/home/project/monolith# kubectl create deployment nginx --image=nginx --replicas=3 --dry-run=client -o yaml > nginxdep.yaml

root@labs--311032102:/home/project/monolith# cat nginxdep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}

#
root@labs--311032102:/home/project/monolith# kubectl create -f nginxdep.yaml
deployment.apps/nginx created
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running   0          16s
pod/nginx-6799fc88d8-bh6d7            1/1     Running   0          16s
pod/nginx-6799fc88d8-xhj5j            1/1     Running   0          16s
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          5m30s
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          5m4s
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          8m18s
pod/order-6d7c686964-s5vfm            1/1     Running   0          52m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          51m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   159m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           17s
deployment.apps/nginx-gorapa-2   3/3     3            3           8m18s
deployment.apps/order            1/1     1            1           52m
deployment.apps/user02-order     1/1     1            1           51m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       16s
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       8m18s
replicaset.apps/order-6d7c686964            1         1         1       52m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       51m
root@labs--311032102:/home/project/monolith# 

## 

replicaset.apps/user02-order-5fd6ff986d     1         1         1       51m
root@labs--311032102:/home/project/monolith# kubectl explain deployment.spec
KIND:     Deployment
VERSION:  apps/v1

RESOURCE: spec <Object>

DESCRIPTION:
     Specification of the desired behavior of the Deployment.

     DeploymentSpec is the specification of the desired behavior of the
     Deployment.

FIELDS:
   minReadySeconds      <integer>
     Minimum number of seconds for which a newly created pod should be ready
     without any of its container crashing, for it to be considered available.
     Defaults to 0 (pod will be considered available as soon as it is ready)

   paused       <boolean>
     Indicates that the deployment is paused.

   progressDeadlineSeconds      <integer>
     The maximum time in seconds for a deployment to make progress before it is
     considered to be failed. The deployment controller will continue to process
     failed deployments and a condition with a ProgressDeadlineExceeded reason
     will be surfaced in the deployment status. Note that progress will not be
     estimated during the time a deployment is paused. Defaults to 600s.

   replicas     <integer>
     Number of desired pods. This is a pointer to distinguish between explicit
     zero and not specified. Defaults to 1.

   revisionHistoryLimit <integer>
     The number of old ReplicaSets to retain to allow rollback. This is a
     pointer to distinguish between explicit zero and not specified. Defaults to
     10.

   selector     <Object> -required-
     Label selector for pods. Existing ReplicaSets whose pods are selected by
     this will be the ones affected by this deployment. It must match the pod
     template's labels.

   strategy     <Object>
     The deployment strategy to use to replace existing pods with new ones.

   template     <Object> -required-
     Template describes the pods that will be created

##
root@labs--311032102:/home/project/monolith# kubectl get all
^[[ANAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running   0          30m
pod/nginx-6799fc88d8-bh6d7            1/1     Running   0          30m
pod/nginx-6799fc88d8-xhj5j            1/1     Running   0          30m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          35m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          35m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          38m
pod/order-6d7c686964-s5vfm            1/1     Running   0          82m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          81m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   3h9m

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           30m
deployment.apps/nginx-gorapa-2   3/3     3            3           38m
deployment.apps/order            1/1     1            1           82m
deployment.apps/user02-order     1/1     1            1           81m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       30m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       38m
replicaset.apps/order-6d7c686964            1         1         1       82m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       81m
root@labs--311032102:/home/project/monolith# kubectl describe pod/nginx-6799fc88d8-bh6d7
Name:         nginx-6799fc88d8-bh6d7
Namespace:    default
Priority:     0
Node:         ip-192-168-29-79.ap-northeast-1.compute.internal/192.168.29.79
Start Time:   Mon, 20 Jun 2022 07:12:06 +0000
Labels:       app=nginx
              pod-template-hash=6799fc88d8
Annotations:  kubernetes.io/psp: eks.privileged
Status:       Running
IP:           192.168.3.78
IPs:
  IP:           192.168.3.78
Controlled By:  ReplicaSet/nginx-6799fc88d8
Containers:
  nginx:
    Container ID:   docker://c15555385c79af96d377c1a3f8ddbfebc5d5c9182a00fb116e1f5a75405fc566
    Image:          nginx
    Image ID:       docker-pullable://nginx@sha256:2bcabc23b45489fb0885d69a06ba1d648aeda973fae7bb981bafbb884165e514
    Port:           <none>
    Host Port:      <none>
    State:          Running
      Started:      Mon, 20 Jun 2022 07:12:09 +0000
    Ready:          True
    Restart Count:  0
    Environment:    <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-zkb74 (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  default-token-zkb74:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-zkb74
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason     Age   From                                                       Message
  ----    ------     ----  ----                                                       -------
  Normal  Scheduled  30m   default-scheduler                                          Successfully assigned default/nginx-6799fc88d8-bh6d7 to ip-192-168-29-79.ap-northeast-1.compute.internal
  Normal  Pulling    30m   kubelet, ip-192-168-29-79.ap-northeast-1.compute.internal  Pulling image "nginx"
  Normal  Pulled     30m   kubelet, ip-192-168-29-79.ap-northeast-1.compute.internal  Successfully pulled image "nginx" in 1.842087721s
  Normal  Created    30m   kubelet, ip-192-168-29-79.ap-northeast-1.compute.internal  Created container nginx
  Normal  Started    30m   kubelet, ip-192-168-29-79.ap-northeast-1.compute.internal  Started container nginx
root@labs--311032102:/home/project/monolith# kubectl -f logs pod/nginx-6799fc88d8-bh6d7
Error: unknown command "pod/nginx-6799fc88d8-bh6d7" for "kubectl"
Run 'kubectl --help' for usage.
root@labs--311032102:/home/project/monolith# kubectl logs pod/nginx-6799fc88d8-bh6d7
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/06/20 07:12:09 [notice] 1#1: using the "epoll" event method
2022/06/20 07:12:09 [notice] 1#1: nginx/1.21.6
2022/06/20 07:12:09 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) 
2022/06/20 07:12:09 [notice] 1#1: OS: Linux 5.4.196-108.356.amzn2.x86_64
2022/06/20 07:12:09 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2022/06/20 07:12:09 [notice] 1#1: start worker processes
2022/06/20 07:12:09 [notice] 1#1: start worker process 31


root@labs--311032102:/home/project/monolith# kubectl expose deployment.apps/nginx-gorapa-2 --port=8080
service/nginx-gorapa-2 exposed
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running   0          31m
pod/nginx-6799fc88d8-bh6d7            1/1     Running   0          31m
pod/nginx-6799fc88d8-xhj5j            1/1     Running   0          31m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          37m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          36m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          39m
pod/order-6d7c686964-s5vfm            1/1     Running   0          84m
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          83m

NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/kubernetes       ClusterIP   10.100.0.1      <none>        443/TCP    3h11m
service/nginx-gorapa-2   ClusterIP   10.100.91.162   <none>        8080/TCP   8s

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           31m
deployment.apps/nginx-gorapa-2   3/3     3            3           39m
deployment.apps/order            1/1     1            1           84m
deployment.apps/user02-order     1/1     1            1           83m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       31m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       39m
replicaset.apps/order-6d7c686964            1         1         1       84m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       83m

root@labs--311032102:/home/project/monolith# kubectl run siege --image=zasmin/siege:1.0
pod/siege created
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS              RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running             0          37m
pod/nginx-6799fc88d8-bh6d7            1/1     Running             0          37m
pod/nginx-6799fc88d8-xhj5j            1/1     Running             0          37m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running             0          42m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running             0          42m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running             0          45m
pod/order-6d7c686964-s5vfm            1/1     Running             0          89m
pod/siege                             0/1     ContainerCreating   0          4s
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running             0          88m

NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/kubernetes       ClusterIP   10.100.0.1      <none>        443/TCP    3h16m
service/nginx-gorapa-2   ClusterIP   10.100.91.162   <none>        8080/TCP   5m28s

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           37m
deployment.apps/nginx-gorapa-2   3/3     3            3           45m
deployment.apps/order            1/1     1            1           89m
deployment.apps/user02-order     1/1     1            1           88m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       37m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       45m
replicaset.apps/order-6d7c686964            1         1         1       89m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       88m
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS              RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running             0          37m
pod/nginx-6799fc88d8-bh6d7            1/1     Running             0          37m
pod/nginx-6799fc88d8-xhj5j            1/1     Running             0          37m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running             0          42m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running             0          42m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running             0          45m
pod/order-6d7c686964-s5vfm            1/1     Running             0          89m
pod/siege                             0/1     ContainerCreating   0          10s
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running             0          88m

NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/kubernetes       ClusterIP   10.100.0.1      <none>        443/TCP    3h16m
service/nginx-gorapa-2   ClusterIP   10.100.91.162   <none>        8080/TCP   5m34s

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           37m
deployment.apps/nginx-gorapa-2   3/3     3            3           45m
deployment.apps/order            1/1     1            1           89m
deployment.apps/user02-order     1/1     1            1           88m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       37m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       45m
replicaset.apps/order-6d7c686964            1         1         1       89m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       88m
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running   0          37m
pod/nginx-6799fc88d8-bh6d7            1/1     Running   0          37m
pod/nginx-6799fc88d8-xhj5j            1/1     Running   0          37m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          42m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          42m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          45m
pod/order-6d7c686964-s5vfm            1/1     Running   0          89m
pod/siege                             1/1     Running   0          14s
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          88m

NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/kubernetes       ClusterIP   10.100.0.1      <none>        443/TCP    3h17m
service/nginx-gorapa-2   ClusterIP   10.100.91.162   <none>        8080/TCP   5m38s

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           37m
deployment.apps/nginx-gorapa-2   3/3     3            3           45m
deployment.apps/order            1/1     1            1           89m
deployment.apps/user02-order     1/1     1            1           88m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       37m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       45m
replicaset.apps/order-6d7c686964            1         1         1       89m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       88m
root@labs--311032102:/home/project/monolith# kubectl get all
NAME                                  READY   STATUS    RESTARTS   AGE
pod/nginx-6799fc88d8-4b9wl            1/1     Running   0          37m
pod/nginx-6799fc88d8-bh6d7            1/1     Running   0          37m
pod/nginx-6799fc88d8-xhj5j            1/1     Running   0          37m
pod/nginx-gorapa-2-8559b5bc76-8xgc8   1/1     Running   0          42m
pod/nginx-gorapa-2-8559b5bc76-mzblw   1/1     Running   0          42m
pod/nginx-gorapa-2-8559b5bc76-sbwq9   1/1     Running   0          45m
pod/order-6d7c686964-s5vfm            1/1     Running   0          89m
pod/siege                             1/1     Running   0          18s
pod/user02-order-5fd6ff986d-4q9q6     1/1     Running   0          88m

NAME                     TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/kubernetes       ClusterIP   10.100.0.1      <none>        443/TCP    3h17m
service/nginx-gorapa-2   ClusterIP   10.100.91.162   <none>        8080/TCP   5m42s

NAME                             READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx            3/3     3            3           37m
deployment.apps/nginx-gorapa-2   3/3     3            3           45m
deployment.apps/order            1/1     1            1           89m
deployment.apps/user02-order     1/1     1            1           88m

NAME                                        DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-6799fc88d8            3         3         3       37m
replicaset.apps/nginx-gorapa-2-8559b5bc76   3         3         3       45m
replicaset.apps/order-6d7c686964            1         1         1       89m
replicaset.apps/user02-order-5fd6ff986d     1         1         1       88m
root@labs--311032102:/home/project/monolith# kubectl exec -it siege --bash
Error: unknown flag: --bash
See 'kubectl exec --help' for usage.
root@labs--311032102:/home/project/monolith# kubectl exec -it siege -- bash
root@siege:/# 
root@siege:/# 
root@siege:/# http http://localhost:8081

http: error: ConnectionError: HTTPConnectionPool(host='localhost', port=8081): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f2cd2678eb8>: Failed to establish a new connection: [Errno 111] Connection refused')) while doing GET request to URL: http://localhost:8081/
root@siege:/# http http://localhost:8081



## 아래싸이트 참조 

https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
